{"ast":null,"code":"import { doesExist } from '@shared/utilities/common-util/common.util';\nimport * as i0 from \"@angular/core\";\nexport class DiceRolledPipe {\n  transform(value) {\n    return this.amendForMultiplier(`${value.no}d${value.pips}${this.deriveModifierString(value.modifier)}`, value.multiplier);\n  }\n  amendForMultiplier(valueString, multiplier) {\n    if (!doesExist(multiplier) || multiplier === 1) {\n      return valueString;\n    } else {\n      return `(${valueString})x${multiplier}`;\n    }\n  }\n  deriveModifierString(modifier) {\n    if (!doesExist(modifier) || modifier === 0) {\n      return '';\n    } else if (modifier > 0) {\n      return `+${modifier}`;\n    } else {\n      return `${modifier}`;\n    }\n  }\n}\nDiceRolledPipe.ɵfac = function DiceRolledPipe_Factory(t) {\n  return new (t || DiceRolledPipe)();\n};\nDiceRolledPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"diceRolled\",\n  type: DiceRolledPipe,\n  pure: true\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,QAAQ,2CAA2C;;AAKrE,OAAM,MAAOC,cAAc;EACzBC,SAAS,CAACC,KAAiB;IACzB,OAAO,IAAI,CAACC,kBAAkB,CAC5B,GAAGD,KAAK,CAACE,EAAE,IAAIF,KAAK,CAACG,IAAI,GAAG,IAAI,CAACC,oBAAoB,CAACJ,KAAK,CAACK,QAAQ,CAAC,EAAE,EACvEL,KAAK,CAACM,UAAU,CACjB;EACH;EAEQL,kBAAkB,CAACM,WAAmB,EAAED,UAAkB;IAChE,IAAI,CAACT,SAAS,CAACS,UAAU,CAAC,IAAIA,UAAU,KAAK,CAAC,EAAE;MAC9C,OAAOC,WAAW;KACnB,MAAM;MACL,OAAO,IAAIA,WAAW,KAAKD,UAAU,EAAE;;EAE3C;EAEQF,oBAAoB,CAACC,QAAgB;IAC3C,IAAI,CAACR,SAAS,CAACQ,QAAQ,CAAC,IAAIA,QAAQ,KAAK,CAAC,EAAE;MAC1C,OAAO,EAAE;KACV,MAAM,IAAIA,QAAQ,GAAG,CAAC,EAAE;MACvB,OAAO,IAAIA,QAAQ,EAAE;KACtB,MAAM;MACL,OAAO,GAAGA,QAAQ,EAAE;;EAExB;;;mBAxBWP,cAAc;AAAA;;;QAAdA,cAAc;EAAAU;AAAA","names":["doesExist","DiceRolledPipe","transform","value","amendForMultiplier","no","pips","deriveModifierString","modifier","multiplier","valueString","pure"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\shared\\pipes\\dice-rolled\\dice-rolled.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { DiceRolled } from '@shared/model/dice-rolled.model';\nimport { doesExist } from '@shared/utilities/common-util/common.util';\n\n@Pipe({\n  name: 'diceRolled',\n})\nexport class DiceRolledPipe implements PipeTransform {\n  transform(value: DiceRolled): string {\n    return this.amendForMultiplier(\n      `${value.no}d${value.pips}${this.deriveModifierString(value.modifier)}`,\n      value.multiplier\n    );\n  }\n\n  private amendForMultiplier(valueString: string, multiplier: number): string {\n    if (!doesExist(multiplier) || multiplier === 1) {\n      return valueString;\n    } else {\n      return `(${valueString})x${multiplier}`;\n    }\n  }\n\n  private deriveModifierString(modifier: number): string {\n    if (!doesExist(modifier) || modifier === 0) {\n      return '';\n    } else if (modifier > 0) {\n      return `+${modifier}`;\n    } else {\n      return `${modifier}`;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}