{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@monster/enter-monster/services/monster-controller/monster-controller.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@shared/pipes/dice-range/dice-range.pipe\";\nconst _c0 = [\"fileInput\"];\nfunction MonsterDisplayComponent_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1, \"\\u00A0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MonsterDisplayComponent_tr_22_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"input\", 8);\n    i0.ɵɵlistener(\"change\", function MonsterDisplayComponent_tr_22_td_1_Template_input_change_1_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const i_r7 = i0.ɵɵnextContext().index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.toggleCheckedMonsterAt(i_r7));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MonsterDisplayComponent_tr_22_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const monster_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.weaponDisplay(monster_r6.missileAttacks), \" \");\n  }\n}\nfunction MonsterDisplayComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, MonsterDisplayComponent_tr_22_td_1_Template, 2, 0, \"td\", 0);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"diceRange\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵtemplate(18, MonsterDisplayComponent_tr_22_ng_container_18_Template, 3, 1, \"ng-container\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const monster_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 12, ctx_r1.removeMode$));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(monster_r6.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", monster_r6.movement, \"\\\" (\", monster_r6.charge, \"\\\")\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 14, monster_r6.noAppearing));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", monster_r6.chanceInLair, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(monster_r6.treasureType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(monster_r6.morale);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.weaponDisplay(monster_r6.meleeAttacks), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", monster_r6.missileAttacks == null ? null : monster_r6.missileAttacks.length);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.defendsAsDisplay(monster_r6.defendsAs), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", monster_r6.specialQualities.substring(0, 5), \" ...\");\n  }\n}\nfunction MonsterDisplayComponent_ng_container_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\")(2, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function MonsterDisplayComponent_ng_container_32_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.removeSelectedMonsters());\n    });\n    i0.ɵɵtext(3, \"Remove\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function MonsterDisplayComponent_ng_container_32_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.toggleRemoveMonsters());\n    });\n    i0.ɵɵtext(5, \"Cancel\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction MonsterDisplayComponent_ng_template_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function MonsterDisplayComponent_ng_template_34_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.toggleRemoveMonsters());\n    });\n    i0.ɵɵtext(1, \"Remove Monsters\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function MonsterDisplayComponent_ng_template_34_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.clearMonsters());\n    });\n    i0.ɵɵtext(3, \"Remove All\");\n    i0.ɵɵelementEnd();\n  }\n}\n/** Presenter element for showing a monster object. UNDER CONSTRUCTION. */\nexport class MonsterDisplayComponent {\n  /** MonsterDisplayComponent Constructor */\n  constructor(monsterController) {\n    this.monsterController = monsterController;\n    this.checkedMonsters = [];\n    this.removeModeSource = new BehaviorSubject(false);\n  }\n  get removeMode() {\n    return this.removeModeSource.value;\n  }\n  /** Initializer Method */\n  ngOnInit() {\n    this.monster$ = this.monsterController.monster$;\n    this.removeMode$ = this.removeModeSource.asObservable();\n  }\n  clearMonsters() {\n    this.monsterController.clearMonsters();\n  }\n  defendsAsDisplay(defense) {\n    return `${defense.no} ${defense.troopType} ${defense.cavalry ? ' Cavalry' : ''}`;\n  }\n  exportMonsters() {\n    this.monsterController.exportMonsters();\n  }\n  importMonsters() {\n    this.monsterController.importMonsters(this.importButton.nativeElement.files[0]);\n    this.importButton.nativeElement.value = '';\n  }\n  removeSelectedMonsters() {\n    this.monsterController.removeMonstersAt(this.checkedMonsters);\n    this.toggleRemoveMonsters();\n  }\n  toggleCheckedMonsterAt(index) {\n    const selectedIndex = this.checkedMonsters.indexOf(index);\n    if (selectedIndex < 0) {\n      this.checkedMonsters.push(index);\n    } else {\n      this.checkedMonsters.splice(selectedIndex, 1);\n    }\n  }\n  toggleRemoveMonsters() {\n    if (this.removeMode) {\n      this.checkedMonsters = [];\n    }\n    this.removeModeSource.next(!this.removeMode);\n  }\n  weaponDisplay(weapons) {\n    let equivalences = [];\n    let types = [];\n    for (let weapon of weapons) {\n      equivalences.push(weapon.no);\n      types.push(weapon.type);\n    }\n    return `${equivalences.join('/')} men (${types.join('/')})`;\n  }\n}\nMonsterDisplayComponent.ɵfac = function MonsterDisplayComponent_Factory(t) {\n  return new (t || MonsterDisplayComponent)(i0.ɵɵdirectiveInject(i1.MonsterControllerService));\n};\nMonsterDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MonsterDisplayComponent,\n  selectors: [[\"greg-monster-display\"]],\n  viewQuery: function MonsterDisplayComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.importButton = _t.first);\n    }\n  },\n  decls: 36,\n  vars: 10,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"import-export\"], [3, \"click\"], [\"type\", \"file\", 3, \"change\"], [\"fileInput\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"readMode\", \"\"], [\"type\", \"checkbox\", 3, \"change\"]],\n  template: function MonsterDisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"tr\");\n      i0.ɵɵtemplate(2, MonsterDisplayComponent_th_2_Template, 2, 0, \"th\", 0);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementStart(4, \"th\");\n      i0.ɵɵtext(5, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\");\n      i0.ɵɵtext(7, \"Move (Charge)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"No. Appearing\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Chance In Lair\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"TreasureType\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Morale\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Attacks As\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Defends As\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Special\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(22, MonsterDisplayComponent_tr_22_Template, 23, 16, \"tr\", 1);\n      i0.ɵɵpipe(23, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"section\")(25, \"div\", 2)(26, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function MonsterDisplayComponent_Template_button_click_26_listener() {\n        return ctx.exportMonsters();\n      });\n      i0.ɵɵtext(27, \"Export\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"label\");\n      i0.ɵɵtext(29, \"Import: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"input\", 4, 5);\n      i0.ɵɵlistener(\"change\", function MonsterDisplayComponent_Template_input_change_30_listener() {\n        return ctx.importMonsters();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(32, MonsterDisplayComponent_ng_container_32_Template, 6, 0, \"ng-container\", 6);\n      i0.ɵɵpipe(33, \"async\");\n      i0.ɵɵtemplate(34, MonsterDisplayComponent_ng_template_34_Template, 4, 0, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r4 = i0.ɵɵreference(35);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 4, ctx.removeMode$));\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(23, 6, ctx.monster$));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(33, 8, ctx.removeMode$))(\"ngIfElse\", _r4);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.AsyncPipe, i3.DiceRangePipe],\n  styles: [\"table[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\ntd[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\nsection[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\nsection[_ngcontent-%COMP%]   .import-export[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 2fr 1fr 1fr;\\n}\\n/*# sourceURL=webpack://./src/app/monster/enter-monster/components/monster-display/monster-display.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9uc3Rlci9lbnRlci1tb25zdGVyL2NvbXBvbmVudHMvbW9uc3Rlci1kaXNwbGF5L21vbnN0ZXItZGlzcGxheS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtBQUNGO0FBQ0U7RUFDRSxhQUFBO0VBQ0Esa0NBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRkIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5zZWN0aW9uIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuc2VjdGlvbiAuaW1wb3J0LWV4cG9ydCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDFmciAxZnI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["ElementRef","BehaviorSubject","i0","MonsterDisplayComponent","constructor","monsterController","removeMode","removeModeSource","value","ngOnInit","monster$","removeMode$","asObservable","clearMonsters","defendsAsDisplay","defense","no","troopType","cavalry","exportMonsters","importMonsters","importButton","nativeElement","files","removeSelectedMonsters","removeMonstersAt","checkedMonsters","toggleRemoveMonsters","toggleCheckedMonsterAt","index","selectedIndex","indexOf","push","splice","next","weaponDisplay","weapons","equivalences","types","weapon","type","join","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\monster\\enter-monster\\components\\monster-display\\monster-display.component.ts","D:\\workspaces\\greg\\src\\app\\monster\\enter-monster\\components\\monster-display\\monster-display.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MonsterControllerService } from '@monster/enter-monster/services/monster-controller/monster-controller.service';\r\nimport {\r\n  ManEquivalence,\r\n  WeaponEquivalence,\r\n  WwwMonster,\r\n} from '@shared/model/www-monster.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n/** Presenter element for showing a monster object. UNDER CONSTRUCTION. */\r\n@Component({\r\n  selector: 'greg-monster-display',\r\n  templateUrl: './monster-display.component.html',\r\n  styleUrls: ['./monster-display.component.scss'],\r\n})\r\nexport class MonsterDisplayComponent implements OnInit {\r\n  monster$: Observable<WwwMonster[]>;\r\n  removeMode$: Observable<boolean>;\r\n\r\n  @ViewChild('fileInput')\r\n  importButton: ElementRef;\r\n\r\n  private checkedMonsters: number[] = [];\r\n  private removeModeSource: BehaviorSubject<boolean> = new BehaviorSubject(\r\n    false\r\n  );\r\n  private get removeMode(): boolean {\r\n    return this.removeModeSource.value;\r\n  }\r\n\r\n  /** MonsterDisplayComponent Constructor */\r\n  constructor(private monsterController: MonsterControllerService) {}\r\n\r\n  /** Initializer Method */\r\n  ngOnInit(): void {\r\n    this.monster$ = this.monsterController.monster$;\r\n    this.removeMode$ = this.removeModeSource.asObservable();\r\n  }\r\n\r\n  clearMonsters(): void {\r\n    this.monsterController.clearMonsters();\r\n  }\r\n\r\n  defendsAsDisplay(defense: ManEquivalence): string {\r\n    return `${defense.no} ${defense.troopType} ${\r\n      defense.cavalry ? ' Cavalry' : ''\r\n    }`;\r\n  }\r\n\r\n  exportMonsters(): void {\r\n    this.monsterController.exportMonsters();\r\n  }\r\n\r\n  importMonsters(): void {\r\n    this.monsterController.importMonsters(\r\n      this.importButton.nativeElement.files[0]\r\n    );\r\n    this.importButton.nativeElement.value = '';\r\n  }\r\n\r\n  removeSelectedMonsters(): void {\r\n    this.monsterController.removeMonstersAt(this.checkedMonsters);\r\n    this.toggleRemoveMonsters();\r\n  }\r\n\r\n  toggleCheckedMonsterAt(index: number): void {\r\n    const selectedIndex = this.checkedMonsters.indexOf(index);\r\n    if (selectedIndex < 0) {\r\n      this.checkedMonsters.push(index);\r\n    } else {\r\n      this.checkedMonsters.splice(selectedIndex, 1);\r\n    }\r\n  }\r\n\r\n  toggleRemoveMonsters(): void {\r\n    if (this.removeMode) {\r\n      this.checkedMonsters = [];\r\n    }\r\n    this.removeModeSource.next(!this.removeMode);\r\n  }\r\n\r\n  weaponDisplay(weapons: WeaponEquivalence[]): string {\r\n    let equivalences: number[] = [];\r\n    let types: string[] = [];\r\n    for (let weapon of weapons) {\r\n      equivalences.push(weapon.no);\r\n      types.push(weapon.type);\r\n    }\r\n    return `${equivalences.join('/')} men (${types.join('/')})`;\r\n  }\r\n}\r\n","<table>\r\n  <tr>\r\n    <th *ngIf=\"removeMode$ | async\">&nbsp;</th>\r\n    <th>Name</th>\r\n    <th>Move (Charge)</th>\r\n    <th>No. Appearing</th>\r\n    <th>Chance In Lair</th>\r\n    <th>TreasureType</th>\r\n    <th>Morale</th>\r\n    <th>Attacks As</th>\r\n    <th>Defends As</th>\r\n    <th>Special</th>\r\n  </tr>\r\n  <tr *ngFor=\"let monster of monster$ | async; index as i\">\r\n    <td *ngIf=\"removeMode$ | async\">\r\n      <input type=\"checkbox\" (change)=\"toggleCheckedMonsterAt(i)\" />\r\n    </td>\r\n    <td>{{ monster.name }}</td>\r\n    <td>{{ monster.movement }}\" ({{ monster.charge }}\")</td>\r\n    <td>{{ monster.noAppearing | diceRange }}</td>\r\n    <td>{{ monster.chanceInLair }}%</td>\r\n    <td>{{ monster.treasureType }}</td>\r\n    <td>{{ monster.morale }}</td>\r\n    <td>\r\n      {{ weaponDisplay(monster.meleeAttacks) }}\r\n      <ng-container *ngIf=\"monster.missileAttacks?.length\">\r\n        <br />\r\n        {{ weaponDisplay(monster.missileAttacks) }}\r\n      </ng-container>\r\n    </td>\r\n    <td>\r\n      {{ defendsAsDisplay(monster.defendsAs) }}\r\n    </td>\r\n    <td>{{ monster.specialQualities.substring(0, 5) }} ...</td>\r\n  </tr>\r\n</table>\r\n<section>\r\n  <div class=\"import-export\">\r\n    <button (click)=\"exportMonsters()\">Export</button>\r\n\r\n    <label>Import: </label>\r\n    <input #fileInput (change)=\"importMonsters()\" type=\"file\" />\r\n  </div>\r\n\r\n  <ng-container *ngIf=\"removeMode$ | async; else readMode\">\r\n    <div>\r\n      <button (click)=\"removeSelectedMonsters()\">Remove</button>\r\n      <button (click)=\"toggleRemoveMonsters()\">Cancel</button>\r\n    </div>\r\n  </ng-container>\r\n  <ng-template #readMode>\r\n    <button (click)=\"toggleRemoveMonsters()\">Remove Monsters</button>\r\n    <button (click)=\"clearMonsters()\">Remove All</button>\r\n  </ng-template>\r\n</section>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}