{"ast":null,"code":"import { EventEmitter, SimpleChanges } from '@angular/core';\nimport { UntypedFormArray, UntypedFormGroup } from '@angular/forms';\nimport { CreateEncounterTableAction } from '@encounter/create-encounter-table/model/create-encounter-table-action.enum';\nimport { DiceRolled } from '@shared/model/dice-rolled.model';\nimport { areEqual, doesExist } from '@shared/utilities/common-util/common.util';\nimport { buildFormFromObject } from '@shared/utilities/form-util/form.util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../shared/components/dice-roller-form/dice-roller-form.component\";\nimport * as i3 from \"@angular/forms\";\nfunction ConfigureDiceRolledComponent_ng_container_12_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵelement(4, \"greg-dice-roller-form\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\")(6, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function ConfigureDiceRolledComponent_ng_container_12_ng_container_2_Template_a_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const i_r5 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.addDicePool(i_r5));\n    });\n    i0.ɵɵtext(7, \"+\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \" / \");\n    i0.ɵɵelementStart(9, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function ConfigureDiceRolledComponent_ng_container_12_ng_container_2_Template_a_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const i_r5 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.removeDicePool(i_r5));\n    });\n    i0.ɵɵtext(10, \"-\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const die_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i_r5 + 1, \". \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"parentForm\", die_r4);\n  }\n}\nfunction ConfigureDiceRolledComponent_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵtemplate(2, ConfigureDiceRolledComponent_ng_container_12_ng_container_2_Template, 11, 2, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.diceRolledForm.controls);\n  }\n}\nfunction ConfigureDiceRolledComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function ConfigureDiceRolledComponent_ng_template_13_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.addDicePool());\n    });\n    i0.ɵɵtext(2, \"Add Dice Pool\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class ConfigureDiceRolledComponent {\n  constructor() {\n    this.createEncounterTableAction = new EventEmitter();\n    this.form = new UntypedFormGroup({\n      diceRolled: new UntypedFormArray([])\n    });\n  }\n  get diceRolledForm() {\n    return this.form.get('diceRolled');\n  }\n  set diceRolledForm(array) {\n    this.form.setControl('diceRolled', array);\n  }\n  ngOnInit() {}\n  ngOnChanges(changes) {\n    if (doesExist(changes.diceRolled) && !areEqual(changes.diceRolled.previousValue, changes.diceRolled.currentValue)) {\n      this.buildDiceRolledFormArray(changes.diceRolled.currentValue);\n    }\n  }\n  addDicePool(idx) {\n    const diceForm = buildFormFromObject(new DiceRolled());\n    doesExist(idx) ? this.diceRolledForm.insert(idx + 1, diceForm) : this.diceRolledForm.push(diceForm);\n  }\n  clear() {\n    this.buildDiceRolledFormArray([]);\n  }\n  removeDicePool(idx) {\n    this.diceRolledForm.removeAt(idx);\n  }\n  save() {\n    this.createEncounterTableAction.emit({\n      action: CreateEncounterTableAction.SAVE_DICE_ROLLED,\n      payload: this.diceRolledForm.value.map(die => new DiceRolled(die))\n    });\n  }\n  reset() {\n    this.buildDiceRolledFormArray(this.diceRolled);\n  }\n  buildDiceRolledFormArray(diceRolled) {\n    this.diceRolledForm = buildFormFromObject(diceRolled);\n  }\n}\nConfigureDiceRolledComponent.ɵfac = function ConfigureDiceRolledComponent_Factory(t) {\n  return new (t || ConfigureDiceRolledComponent)();\n};\nConfigureDiceRolledComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ConfigureDiceRolledComponent,\n  selectors: [[\"greg-configure-dice-rolled\"]],\n  inputs: {\n    diceRolled: \"diceRolled\"\n  },\n  outputs: {\n    createEncounterTableAction: \"createEncounterTableAction\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 15,\n  vars: 3,\n  consts: [[3, \"formGroup\"], [1, \"action-bar\"], [3, \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"noDice\", \"\"], [\"formArrayName\", \"diceRolled\", 1, \"form-array\"], [4, \"ngFor\", \"ngForOf\"], [3, \"parentForm\"], [1, \"add-pool\"]],\n  template: function ConfigureDiceRolledComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Configure Dice Pool\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"section\", 0)(3, \"div\", 1)(4, \"a\", 2);\n      i0.ɵɵlistener(\"click\", function ConfigureDiceRolledComponent_Template_a_click_4_listener() {\n        return ctx.clear();\n      });\n      i0.ɵɵtext(5, \"Clear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \" | \");\n      i0.ɵɵelementStart(7, \"a\", 2);\n      i0.ɵɵlistener(\"click\", function ConfigureDiceRolledComponent_Template_a_click_7_listener() {\n        return ctx.reset();\n      });\n      i0.ɵɵtext(8, \"Reset\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(9, \" | \");\n      i0.ɵɵelementStart(10, \"a\", 2);\n      i0.ɵɵlistener(\"click\", function ConfigureDiceRolledComponent_Template_a_click_10_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(11, \"Save\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(12, ConfigureDiceRolledComponent_ng_container_12_Template, 3, 1, \"ng-container\", 3);\n      i0.ɵɵtemplate(13, ConfigureDiceRolledComponent_ng_template_13_Template, 3, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(14);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.diceRolledForm.length > 0)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.DiceRollerFormComponent, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormArrayName],\n  styles: [\"div[_ngcontent-%COMP%] {\\n  margin-bottom: 0.5em;\\n}\\ndiv.action-bar[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\ndiv.add-pool[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\ndiv.form-array[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 3em 1fr 4em;\\n}\\n/*# sourceURL=webpack://./src/app/encounter/create-encounter-table/components/configure-dice-rolled/configure-dice-rolled.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW5jb3VudGVyL2NyZWF0ZS1lbmNvdW50ZXItdGFibGUvY29tcG9uZW50cy9jb25maWd1cmUtZGljZS1yb2xsZWQvY29uZmlndXJlLWRpY2Utcm9sbGVkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQUE7QUFDRjtBQUNFO0VBQ0Usa0JBQUE7QUFDSjtBQUVFO0VBQ0Usa0JBQUE7QUFBSjtBQUdFO0VBQ0UsYUFBQTtFQUNBLGtDQUFBO0FBREoiLCJzb3VyY2VzQ29udGVudCI6WyJkaXYge1xuICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbn1cbmRpdi5hY3Rpb24tYmFyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuZGl2LmFkZC1wb29sIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuZGl2LmZvcm0tYXJyYXkge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDNlbSAxZnIgNGVtO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAEEA,YAAY,EAKZC,aAAa,QACR,eAAe;AACtB,SAASC,gBAAgB,EAAEC,gBAAgB,QAAQ,gBAAgB;AACnE,SAASC,0BAA0B,QAAQ,4EAA4E;AAEvH,SAASC,UAAU,QAAQ,iCAAiC;AAC5D,SAASC,QAAQ,EAAEC,SAAS,QAAQ,2CAA2C;AAC/E,SAASC,mBAAmB,QAAQ,uCAAuC;;;;;;;;ICHrEC,6BAAsE;IACpEA,4BAAM;IAACA,YAAa;IAAAA,iBAAO;IAC3BA,4BAAM;IACJA,2CAAkE;IACpEA,iBAAO;IACPA,4BAAM;IACDA;MAAA;MAAA;MAAA;MAAA,OAASA,uCAAc;IAAA,EAAC;IAACA,iBAAC;IAAAA,iBAAI;IACjCA,mBACA;IAAAA,4BAA+B;IAA5BA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAiB;IAAA,EAAC;IAACA,kBAAC;IAAAA,iBAAI;IAExCA,0BAAe;;;;;IATNA,eAAa;IAAbA,0CAAa;IAEKA,eAAkB;IAAlBA,mCAAkB;;;;;IALjDA,6BAA6D;IAC3DA,8BAAmD;IACjDA,gHAUe;IACjBA,iBAAM;IACRA,0BAAe;;;;IAZmBA,eAA4B;IAA5BA,wDAA4B;;;;;;IAc5DA,8BAAsB;IAAGA;MAAAA;MAAA;MAAA,OAASA,mCAAa;IAAA,EAAC;IAACA,6BAAa;IAAAA,iBAAI;;;ADJtE,OAAM,MAAOC,4BAA4B;EAgBvCC;IAdU,+BAA0B,GAAG,IAAIX,YAAY,EAEpD;IAQH,SAAI,GAAqB,IAAIG,gBAAgB,CAAC;MAC5CS,UAAU,EAAE,IAAIV,gBAAgB,CAAC,EAAE;KACpC,CAAC;EAEa;EAVf,IAAIW,cAAc;IAChB,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,YAAY,CAAqB;EACxD;EACA,IAAIF,cAAc,CAACG,KAAuB;IACxC,IAAI,CAACF,IAAI,CAACG,UAAU,CAAC,YAAY,EAAED,KAAK,CAAC;EAC3C;EAOAE,QAAQ,IAAU;EAElBC,WAAW,CAACC,OAAsB;IAChC,IACEb,SAAS,CAACa,OAAO,CAACR,UAAU,CAAC,IAC7B,CAACN,QAAQ,CACPc,OAAO,CAACR,UAAU,CAACS,aAAa,EAChCD,OAAO,CAACR,UAAU,CAACU,YAAY,CAChC,EACD;MACA,IAAI,CAACC,wBAAwB,CAACH,OAAO,CAACR,UAAU,CAACU,YAAY,CAAC;;EAElE;EAEAE,WAAW,CAACC,GAAY;IACtB,MAAMC,QAAQ,GAAGlB,mBAAmB,CAAC,IAAIH,UAAU,EAAE,CAAC;IACtDE,SAAS,CAACkB,GAAG,CAAC,GACV,IAAI,CAACZ,cAAc,CAACc,MAAM,CAACF,GAAG,GAAG,CAAC,EAAEC,QAAQ,CAAC,GAC7C,IAAI,CAACb,cAAc,CAACe,IAAI,CAACF,QAAQ,CAAC;EACxC;EAEAG,KAAK;IACH,IAAI,CAACN,wBAAwB,CAAC,EAAE,CAAC;EACnC;EAEAO,cAAc,CAACL,GAAW;IACxB,IAAI,CAACZ,cAAc,CAACkB,QAAQ,CAACN,GAAG,CAAC;EACnC;EAEAO,IAAI;IACF,IAAI,CAACC,0BAA0B,CAACC,IAAI,CAAC;MACnCC,MAAM,EAAE/B,0BAA0B,CAACgC,gBAAgB;MACnDC,OAAO,EAAE,IAAI,CAACxB,cAAc,CAACyB,KAAK,CAACC,GAAG,CACnCC,GAAe,IAAK,IAAInC,UAAU,CAACmC,GAAG,CAAC;KAEZ,CAAC;EACnC;EAEAC,KAAK;IACH,IAAI,CAAClB,wBAAwB,CAAC,IAAI,CAACX,UAAU,CAAC;EAChD;EAEQW,wBAAwB,CAACX,UAAwB;IACvD,IAAI,CAACC,cAAc,GAAGL,mBAAmB,CAACI,UAAU,CAAqB;EAC3E;;;mBA9DWF,4BAA4B;AAAA;;QAA5BA,4BAA4B;EAAAgC;EAAAC;IAAA/B;EAAA;EAAAgC;IAAAX;EAAA;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCrBzCxC,0BAAI;MAAAA,mCAAmB;MAAAA,iBAAK;MAC5BA,kCAA4B;MAErBA;QAAA,OAASyC,WAAO;MAAA,EAAC;MAACzC,qBAAK;MAAAA,iBAAI;MAC9BA,mBACA;MAAAA,4BAAqB;MAAlBA;QAAA,OAASyC,WAAO;MAAA,EAAC;MAACzC,qBAAK;MAAAA,iBAAI;MAC9BA,mBACA;MAAAA,6BAAoB;MAAjBA;QAAA,OAASyC,UAAM;MAAA,EAAC;MAACzC,qBAAI;MAAAA,iBAAI;MAE9BA,iGAce;MACfA,gIAEc;MAChBA,iBAAU;;;;MA1BDA,eAAkB;MAAlBA,oCAAkB;MAQVA,gBAAiC;MAAjCA,oDAAiC","names":["EventEmitter","SimpleChanges","UntypedFormArray","UntypedFormGroup","CreateEncounterTableAction","DiceRolled","areEqual","doesExist","buildFormFromObject","i0","ConfigureDiceRolledComponent","constructor","diceRolled","diceRolledForm","form","get","array","setControl","ngOnInit","ngOnChanges","changes","previousValue","currentValue","buildDiceRolledFormArray","addDicePool","idx","diceForm","insert","push","clear","removeDicePool","removeAt","save","createEncounterTableAction","emit","action","SAVE_DICE_ROLLED","payload","value","map","die","reset","selectors","inputs","outputs","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\encounter\\create-encounter-table\\components\\configure-dice-rolled\\configure-dice-rolled.component.ts","D:\\workspaces\\greg\\src\\app\\encounter\\create-encounter-table\\components\\configure-dice-rolled\\configure-dice-rolled.component.html"],"sourcesContent":["import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormGroup } from '@angular/forms';\r\nimport { CreateEncounterTableAction } from '@encounter/create-encounter-table/model/create-encounter-table-action.enum';\r\nimport { ICreateEncounterTableAction } from '@encounter/create-encounter-table/model/create-encounter-table-action.interface';\r\nimport { DiceRolled } from '@shared/model/dice-rolled.model';\r\nimport { areEqual, doesExist } from '@shared/utilities/common-util/common.util';\r\nimport { buildFormFromObject } from '@shared/utilities/form-util/form.util';\r\n\r\n@Component({\r\n  selector: 'greg-configure-dice-rolled',\r\n  templateUrl: './configure-dice-rolled.component.html',\r\n  styleUrls: ['./configure-dice-rolled.component.scss'],\r\n})\r\nexport class ConfigureDiceRolledComponent implements OnInit, OnChanges {\r\n  @Input() diceRolled: DiceRolled[];\r\n  @Output() createEncounterTableAction = new EventEmitter<\r\n    ICreateEncounterTableAction\r\n  >();\r\n\r\n  get diceRolledForm(): UntypedFormArray {\r\n    return this.form.get('diceRolled') as UntypedFormArray;\r\n  }\r\n  set diceRolledForm(array: UntypedFormArray) {\r\n    this.form.setControl('diceRolled', array);\r\n  }\r\n  form: UntypedFormGroup = new UntypedFormGroup({\r\n    diceRolled: new UntypedFormArray([]),\r\n  });\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      doesExist(changes.diceRolled) &&\r\n      !areEqual(\r\n        changes.diceRolled.previousValue,\r\n        changes.diceRolled.currentValue\r\n      )\r\n    ) {\r\n      this.buildDiceRolledFormArray(changes.diceRolled.currentValue);\r\n    }\r\n  }\r\n\r\n  addDicePool(idx?: number): void {\r\n    const diceForm = buildFormFromObject(new DiceRolled());\r\n    doesExist(idx)\r\n      ? this.diceRolledForm.insert(idx + 1, diceForm)\r\n      : this.diceRolledForm.push(diceForm);\r\n  }\r\n\r\n  clear(): void {\r\n    this.buildDiceRolledFormArray([]);\r\n  }\r\n\r\n  removeDicePool(idx: number): void {\r\n    this.diceRolledForm.removeAt(idx);\r\n  }\r\n\r\n  save(): void {\r\n    this.createEncounterTableAction.emit({\r\n      action: CreateEncounterTableAction.SAVE_DICE_ROLLED,\r\n      payload: this.diceRolledForm.value.map(\r\n        (die: DiceRolled) => new DiceRolled(die)\r\n      ),\r\n    } as ICreateEncounterTableAction);\r\n  }\r\n\r\n  reset(): void {\r\n    this.buildDiceRolledFormArray(this.diceRolled);\r\n  }\r\n\r\n  private buildDiceRolledFormArray(diceRolled: DiceRolled[]): void {\r\n    this.diceRolledForm = buildFormFromObject(diceRolled) as UntypedFormArray;\r\n  }\r\n}\r\n","<h2>Configure Dice Pool</h2>\r\n<section [formGroup]=\"form\">\r\n  <div class=\"action-bar\">\r\n    <a (click)=\"clear()\">Clear</a>\r\n    |\r\n    <a (click)=\"reset()\">Reset</a>\r\n    |\r\n    <a (click)=\"save()\">Save</a>\r\n  </div>\r\n  <ng-container *ngIf=\"diceRolledForm.length > 0; else noDice\">\r\n    <div class=\"form-array\" formArrayName=\"diceRolled\">\r\n      <ng-container *ngFor=\"let die of diceRolledForm.controls; index as i\">\r\n        <span> {{ i + 1 }}. </span>\r\n        <span>\r\n          <greg-dice-roller-form [parentForm]=\"die\"></greg-dice-roller-form>\r\n        </span>\r\n        <span>\r\n          <a (click)=\"addDicePool(i)\">+</a>\r\n          /\r\n          <a (click)=\"removeDicePool(i)\">-</a>\r\n        </span>\r\n      </ng-container>\r\n    </div>\r\n  </ng-container>\r\n  <ng-template #noDice>\r\n    <div class=\"add-pool\"><a (click)=\"addDicePool()\">Add Dice Pool</a></div>\r\n  </ng-template>\r\n</section>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}