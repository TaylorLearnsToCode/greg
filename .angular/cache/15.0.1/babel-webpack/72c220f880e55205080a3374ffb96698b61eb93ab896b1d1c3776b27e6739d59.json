{"ast":null,"code":"import { EncounterRowTypes } from '@encounter/create-encounter-table/model/encounter-row-types.enum';\nimport { doesExist } from '@shared/utilities/common-util/common.util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../encounter-shared/pipes/hit-dice/hit-dice.pipe\";\nimport * as i3 from \"../../../encounter-shared/pipes/number-appearing/number-appearing.pipe\";\nimport * as i4 from \"../../../encounter-shared/pipes/weapon-attacks/weapon-attacks.pipe\";\nfunction DisplayTablePrintComponent_ng_container_22_tr_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"json\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"numberAppearing\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"hitDice\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\", 7);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"weaponAttacks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20, \"Save As\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const monster_r10 = ctx.$implicit;\n    const e_r5 = i0.ɵɵnextContext(2).index;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 9, ctx_r9.encounterRollMapping[e_r5].range));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(monster_r10.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 11, monster_r10, ctx_r9.encounterTable.location));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(monster_r10.armorClass);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(13, 14, monster_r10));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(16, 16, monster_r10.attacks), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", monster_r10.movementExploration, \"' (\", monster_r10.movementTactical, \"') \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(monster_r10.morale);\n  }\n}\nfunction DisplayTablePrintComponent_ng_container_22_tr_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DisplayTablePrintComponent_ng_container_22_tr_1_ng_container_2_ng_container_1_Template, 23, 18, \"ng-container\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const encounter_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", encounter_r4.monsters);\n  }\n}\nfunction DisplayTablePrintComponent_ng_container_22_tr_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\", 8);\n    i0.ɵɵelement(2, \"greg-display-table-print\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const encounter_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"encounterTable\", encounter_r4);\n  }\n}\nfunction DisplayTablePrintComponent_ng_container_22_tr_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\", 10);\n    i0.ɵɵtext(2, \" Unable to determine content type. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction DisplayTablePrintComponent_ng_container_22_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementContainerStart(1, 4);\n    i0.ɵɵtemplate(2, DisplayTablePrintComponent_ng_container_22_tr_1_ng_container_2_Template, 2, 1, \"ng-container\", 5);\n    i0.ɵɵtemplate(3, DisplayTablePrintComponent_ng_container_22_tr_1_ng_container_3_Template, 3, 1, \"ng-container\", 5);\n    i0.ɵɵtemplate(4, DisplayTablePrintComponent_ng_container_22_tr_1_ng_container_4_Template, 3, 0, \"ng-container\", 6);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const encounter_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r3.getRowType(encounter_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r3.ROW_TYPES.ENCOUNTER);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r3.ROW_TYPES.TABLE);\n  }\n}\nfunction DisplayTablePrintComponent_ng_container_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DisplayTablePrintComponent_ng_container_22_tr_1_Template, 5, 3, \"tr\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.encounters);\n  }\n}\nfunction DisplayTablePrintComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 10);\n    i0.ɵɵtext(2, \" No Encounter Results Defined. \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class DisplayTablePrintComponent {\n  constructor() {\n    this.ROW_TYPES = EncounterRowTypes;\n  }\n  get encounterRollMapping() {\n    return this.encounterTable.encounterRollMapping;\n  }\n  get encounters() {\n    return this.encounterTable.encounters;\n  }\n  ngOnInit() {}\n  ngOnChanges() {}\n  getRowType(encounter) {\n    if (doesExist(encounter.monsters)) {\n      return EncounterRowTypes.ENCOUNTER;\n    } else if (doesExist(encounter.encounters)) {\n      return EncounterRowTypes.TABLE;\n    } else {\n      return EncounterRowTypes.UNDEFINED;\n    }\n  }\n}\nDisplayTablePrintComponent.ɵfac = function DisplayTablePrintComponent_Factory(t) {\n  return new (t || DisplayTablePrintComponent)();\n};\nDisplayTablePrintComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DisplayTablePrintComponent,\n  selectors: [[\"greg-display-table-print\"]],\n  inputs: {\n    encounterTable: \"encounterTable\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 25,\n  vars: 5,\n  consts: [[2, \"width\", \"100%\"], [4, \"ngIf\", \"ngIfElse\"], [\"noEncountersFound\", \"\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [2, \"white-space\", \"pre\"], [\"colspan\", \"8\"], [3, \"encounterTable\"], [\"colspan\", \"8\", 2, \"font-style\", \"italic\", \"text-align\", \"center\"]],\n  template: function DisplayTablePrintComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0);\n      i0.ɵɵpipe(1, \"json\");\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"tr\")(4, \"th\");\n      i0.ɵɵtext(5, \"Roll\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\");\n      i0.ɵɵtext(7, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"AC\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"HD\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Attacks\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Move\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Save As\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Morale\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(22, DisplayTablePrintComponent_ng_container_22_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵtemplate(23, DisplayTablePrintComponent_ng_template_23_Template, 3, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(24);\n      i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(1, 3, ctx.encounterTable), \" \");\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"ngIf\", ctx.encounterRollMapping.length > 0)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, DisplayTablePrintComponent, i1.JsonPipe, i2.HitDicePipe, i3.NumberAppearingPipe, i4.WeaponAttacksPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EncounterRowTypes","doesExist","i0","DisplayTablePrintComponent","constructor","encounterRollMapping","encounterTable","encounters","ngOnInit","ngOnChanges","getRowType","encounter","monsters","ENCOUNTER","TABLE","UNDEFINED","selectors","inputs","features","decls","vars","consts","template","styles"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\encounter\\create-encounter-table\\components\\display-table-print\\display-table-print.component.ts","D:\\workspaces\\greg\\src\\app\\encounter\\create-encounter-table\\components\\display-table-print\\display-table-print.component.html"],"sourcesContent":["import { Component, Input, OnChanges, OnInit } from '@angular/core';\r\nimport { EncounterRowTypes } from '@encounter/create-encounter-table/model/encounter-row-types.enum';\r\nimport { EncounterTable } from '@encounter/encounter-shared/model/encounter-table.model';\r\nimport { Encounter } from '@encounter/encounter-shared/model/encounter.model';\r\nimport { IRollMapping } from '@shared/model/roll-index-mapping.interface';\r\nimport { doesExist } from '@shared/utilities/common-util/common.util';\r\n\r\n@Component({\r\n  selector: 'greg-display-table-print',\r\n  templateUrl: './display-table-print.component.html',\r\n  styleUrls: ['./display-table-print.component.scss'],\r\n})\r\nexport class DisplayTablePrintComponent implements OnInit, OnChanges {\r\n  @Input() encounterTable: EncounterTable;\r\n\r\n  readonly ROW_TYPES = EncounterRowTypes;\r\n\r\n  get encounterRollMapping(): IRollMapping[] {\r\n    return this.encounterTable.encounterRollMapping;\r\n  }\r\n\r\n  get encounters(): Array<Encounter | EncounterTable> {\r\n    return this.encounterTable.encounters as Array<Encounter | EncounterTable>;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(): void {}\r\n\r\n  getRowType(encounter: Encounter | EncounterTable): EncounterRowTypes {\r\n    if (doesExist((encounter as Encounter).monsters)) {\r\n      return EncounterRowTypes.ENCOUNTER;\r\n    } else if (doesExist((encounter as EncounterTable).encounters)) {\r\n      return EncounterRowTypes.TABLE;\r\n    } else {\r\n      return EncounterRowTypes.UNDEFINED;\r\n    }\r\n  }\r\n}\r\n","{{ encounterTable | json }}\r\n\r\n<table style=\"width: 100%\">\r\n  <tr>\r\n    <th>Roll</th>\r\n    <th>Name</th>\r\n    <th>Number</th>\r\n    <th>AC</th>\r\n    <th>HD</th>\r\n    <th>Attacks</th>\r\n    <th>Move</th>\r\n    <th>Save As</th>\r\n    <th>Morale</th>\r\n  </tr>\r\n  <ng-container *ngIf=\"encounterRollMapping.length > 0; else noEncountersFound\">\r\n    <tr *ngFor=\"let encounter of encounters; index as e\">\r\n      <ng-container [ngSwitch]=\"getRowType(encounter)\">\r\n        <ng-container *ngSwitchCase=\"ROW_TYPES.ENCOUNTER\">\r\n          <ng-container *ngFor=\"let monster of encounter.monsters\">\r\n            <td>{{ encounterRollMapping[e].range | json }}</td>\r\n            <td>{{ monster.name }}</td>\r\n            <td>{{ monster | numberAppearing: encounterTable.location }}</td>\r\n            <td>{{ monster.armorClass }}</td>\r\n            <td>{{ monster | hitDice }}</td>\r\n            <td style=\"white-space: pre\">\r\n              {{ monster.attacks | weaponAttacks }}\r\n            </td>\r\n            <td>\r\n              {{ monster.movementExploration }}' ({{\r\n                monster.movementTactical\r\n              }}')\r\n            </td>\r\n            <td>Save As</td>\r\n            <td>{{ monster.morale }}</td>\r\n          </ng-container>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"ROW_TYPES.TABLE\">\r\n          <td colspan=\"8\">\r\n            <greg-display-table-print\r\n              [encounterTable]=\"encounter\"\r\n            ></greg-display-table-print>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container *ngSwitchDefault>\r\n          <td colspan=\"8\" style=\"font-style: italic; text-align: center\">\r\n            Unable to determine content type.\r\n          </td>\r\n        </ng-container>\r\n      </ng-container>\r\n    </tr>\r\n  </ng-container>\r\n  <ng-template #noEncountersFound>\r\n    <tr>\r\n      <td colspan=\"8\" style=\"font-style: italic; text-align: center\">\r\n        No Encounter Results Defined.\r\n      </td>\r\n    </tr>\r\n  </ng-template>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}