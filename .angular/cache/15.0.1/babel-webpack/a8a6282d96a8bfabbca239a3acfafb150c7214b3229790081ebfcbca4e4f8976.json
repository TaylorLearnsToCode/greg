{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction DiceRollerFormComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n/**\r\n * Presenter component to house re-usable form for when a user is defining\r\n * a set of dice to be rolled.\r\n */\nexport class DiceRollerFormComponent {}\nDiceRollerFormComponent.ɵfac = function DiceRollerFormComponent_Factory(t) {\n  return new (t || DiceRollerFormComponent)();\n};\nDiceRollerFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DiceRollerFormComponent,\n  selectors: [[\"greg-dice-roller-form\"]],\n  inputs: {\n    parentForm: \"parentForm\",\n    splitLines: \"splitLines\"\n  },\n  decls: 9,\n  vars: 2,\n  consts: [[3, \"formGroup\"], [\"formControlName\", \"no\", \"type\", \"number\"], [\"formControlName\", \"pips\", \"type\", \"number\"], [4, \"ngIf\"], [\"formControlName\", \"modifier\", \"type\", \"number\"], [\"formControlName\", \"multiplier\", \"type\", \"number\"]],\n  template: function DiceRollerFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainerStart(0, 0);\n      i0.ɵɵelement(1, \"input\", 1);\n      i0.ɵɵtext(2, \" D \");\n      i0.ɵɵelement(3, \"input\", 2);\n      i0.ɵɵtemplate(4, DiceRollerFormComponent_ng_container_4_Template, 2, 0, \"ng-container\", 3);\n      i0.ɵɵtext(5, \" +/- \");\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵtext(7, \" x \");\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementContainerEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.parentForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.splitLines);\n    }\n  },\n  dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"input[type=number][_ngcontent-%COMP%] {\\n  width: 1.5em;\\n}\\n/*# sourceURL=webpack://./src/app/shared/components/dice-roller-form/dice-roller-form.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGljZS1yb2xsZXItZm9ybS9kaWNlLXJvbGxlci1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXRbdHlwZT1udW1iZXJdIHtcbiAgd2lkdGg6IDEuNWVtO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;IAIEA,6BAAiC;IAC/BA,qBAAM;IACRA,0BAAe;;;ACHjB;;;;AASA,OAAM,MAAOC,uBAAuB;;mBAAvBA,uBAAuB;AAAA;;QAAvBA,uBAAuB;EAAAC;EAAAC;IAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZpCT,gCAAuC;MACrCA,2BAA4C;MAC5CA,mBACA;MAAAA,2BAA8C;MAC9CA,0FAEe;MACfA,qBACA;MAAAA,2BAAkD;MAClDA,mBACA;MAAAA,2BAAoD;MACtDA,0BAAe;;;MAXDA,0CAAwB;MAIrBA,eAAgB;MAAhBA,qCAAgB","names":["i0","DiceRollerFormComponent","selectors","inputs","parentForm","splitLines","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\shared\\components\\dice-roller-form\\dice-roller-form.component.html","D:\\workspaces\\greg\\src\\app\\shared\\components\\dice-roller-form\\dice-roller-form.component.ts"],"sourcesContent":["<ng-container [formGroup]=\"parentForm\">\r\n  <input formControlName=\"no\" type=\"number\" />\r\n  D\r\n  <input formControlName=\"pips\" type=\"number\" />\r\n  <ng-container *ngIf=\"splitLines\">\r\n    <br />\r\n  </ng-container>\r\n  +/-\r\n  <input formControlName=\"modifier\" type=\"number\" />\r\n  x\r\n  <input formControlName=\"multiplier\" type=\"number\" />\r\n</ng-container>\r\n","import { Component, Input } from '@angular/core';\r\nimport { UntypedFormGroup } from '@angular/forms';\r\n\r\n/**\r\n * Presenter component to house re-usable form for when a user is defining\r\n * a set of dice to be rolled.\r\n */\r\n@Component({\r\n  selector: 'greg-dice-roller-form',\r\n  templateUrl: './dice-roller-form.component.html',\r\n  styleUrls: ['./dice-roller-form.component.scss'],\r\n})\r\nexport class DiceRollerFormComponent {\r\n  /** The form in which the dice are being defined. */\r\n  @Input() parentForm: UntypedFormGroup;\r\n  /** If TRUE, breaks the UI such that the no. and pips appear on one line and modifier and multiplier on a second. */\r\n  @Input() splitLines: boolean;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}