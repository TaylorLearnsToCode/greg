{"ast":null,"code":"import { rollDice } from '@shared/utilities/dice-roller/dice-roller.util';\nimport { TreasureRollResult } from '@treasure/enter-treasure/model/treasure-list-entry.model';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class RollTreasureControllerService {\n  constructor() {\n    this.areEnteringTreasure = new BehaviorSubject(true);\n    this.rolledTreasureSource = new BehaviorSubject(null);\n    this.areEnteringTreasure$ = this.areEnteringTreasure.asObservable();\n    this.rolledTreasure$ = this.rolledTreasureSource.asObservable();\n  }\n  toggleAreEnteringTreasure() {\n    this.areEnteringTreasure.next(!this.areEnteringTreasure.value);\n  }\n  rollTreasure(treasureList) {\n    const rolledTreasure = new TreasureRollResult();\n    rolledTreasure.copper = this.rollSpecie(treasureList.copper);\n    rolledTreasure.silver = this.rollSpecie(treasureList.silver);\n    rolledTreasure.gold = this.rollSpecie(treasureList.gold);\n    return rolledTreasure;\n  }\n  rollSpecie(specie) {\n    return rollDice(specie.amount);\n  }\n}\nRollTreasureControllerService.ɵfac = function RollTreasureControllerService_Factory(t) {\n  return new (t || RollTreasureControllerService)();\n};\nRollTreasureControllerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RollTreasureControllerService,\n  factory: RollTreasureControllerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,QAAQ,gDAAgD;AACzE,SAGEC,kBAAkB,QACb,0DAA0D;AACjE,SAASC,eAAe,QAAoB,MAAM;;AAKlD,OAAM,MAAOC,6BAA6B;EAYxCC;IAXQ,wBAAmB,GAA6B,IAAIF,eAAe,CACzE,IAAI,CACL;IACO,yBAAoB,GAC1B,IAAIA,eAAe,CAAC,IAAI,CAAC;IAE3B,yBAAoB,GAClB,IAAI,CAACG,mBAAmB,CAACC,YAAY,EAAE;IACzC,oBAAe,GACb,IAAI,CAACC,oBAAoB,CAACD,YAAY,EAAE;EAE3B;EAEfE,yBAAyB;IACvB,IAAI,CAACH,mBAAmB,CAACI,IAAI,CAAC,CAAC,IAAI,CAACJ,mBAAmB,CAACK,KAAK,CAAC;EAChE;EAEAC,YAAY,CAACC,YAA+B;IAC1C,MAAMC,cAAc,GAAuB,IAAIZ,kBAAkB,EAAE;IACnEY,cAAc,CAACC,MAAM,GAAG,IAAI,CAACC,UAAU,CAACH,YAAY,CAACE,MAAM,CAAC;IAC5DD,cAAc,CAACG,MAAM,GAAG,IAAI,CAACD,UAAU,CAACH,YAAY,CAACI,MAAM,CAAC;IAC5DH,cAAc,CAACI,IAAI,GAAG,IAAI,CAACF,UAAU,CAACH,YAAY,CAACK,IAAI,CAAC;IACxD,OAAOJ,cAAc;EACvB;EAEQE,UAAU,CAACG,MAAc;IAC/B,OAAOlB,QAAQ,CAACkB,MAAM,CAACC,MAAM,CAAC;EAChC;;;mBA5BWhB,6BAA6B;AAAA;;SAA7BA,6BAA6B;EAAAiB,SAA7BjB,6BAA6B;EAAAkB,YAF5B;AAAM","names":["rollDice","TreasureRollResult","BehaviorSubject","RollTreasureControllerService","constructor","areEnteringTreasure","asObservable","rolledTreasureSource","toggleAreEnteringTreasure","next","value","rollTreasure","treasureList","rolledTreasure","copper","rollSpecie","silver","gold","specie","amount","factory","providedIn"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\treasure\\enter-treasure\\services\\roll-treasure-controller\\roll-treasure-controller.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { rollDice } from '@shared/utilities/dice-roller/dice-roller.util';\nimport {\n  Specie,\n  TreasureListEntry,\n  TreasureRollResult,\n} from '@treasure/enter-treasure/model/treasure-list-entry.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RollTreasureControllerService {\n  private areEnteringTreasure: BehaviorSubject<boolean> = new BehaviorSubject(\n    true\n  );\n  private rolledTreasureSource: BehaviorSubject<TreasureRollResult> =\n    new BehaviorSubject(null);\n\n  areEnteringTreasure$: Observable<boolean> =\n    this.areEnteringTreasure.asObservable();\n  rolledTreasure$: Observable<TreasureRollResult> =\n    this.rolledTreasureSource.asObservable();\n\n  constructor() {}\n\n  toggleAreEnteringTreasure(): void {\n    this.areEnteringTreasure.next(!this.areEnteringTreasure.value);\n  }\n\n  rollTreasure(treasureList: TreasureListEntry): TreasureRollResult {\n    const rolledTreasure: TreasureRollResult = new TreasureRollResult();\n    rolledTreasure.copper = this.rollSpecie(treasureList.copper);\n    rolledTreasure.silver = this.rollSpecie(treasureList.silver);\n    rolledTreasure.gold = this.rollSpecie(treasureList.gold);\n    return rolledTreasure;\n  }\n\n  private rollSpecie(specie: Specie): number {\n    return rollDice(specie.amount);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}