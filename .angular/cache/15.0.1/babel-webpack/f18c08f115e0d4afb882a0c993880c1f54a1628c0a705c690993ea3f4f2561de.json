{"ast":null,"code":"import { EventEmitter, SimpleChanges } from '@angular/core';\nimport { UntypedFormControl, UntypedFormGroup } from '@angular/forms';\nimport { CreateEncounterTableAction } from '@encounter/create-encounter-table/model/create-encounter-table-action.enum';\nimport { EncounterLocation } from '@encounter/encounter-shared/model/encounter-locationS.enum';\nimport { EncounterTableType } from '@encounter/encounter-shared/model/encounter-table-types.enum';\nimport { areEqual, doesExist } from '@shared/utilities/common-util/common.util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction ConfigureEncounterTableComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", ctx_r0.ENCOUNTER_TABLE_TYPES[option_r2]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\nfunction ConfigureEncounterTableComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", ctx_r1.LOCATION_TYPES[option_r3]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r3, \" \");\n  }\n}\nexport class ConfigureEncounterTableComponent {\n  constructor() {\n    this.createEncounterTableAction = new EventEmitter();\n    this.LOCATION_TYPES = EncounterLocation;\n    this.LOCATION_OPTIONS = Object.keys(EncounterLocation).filter(key => !RegExp(/^\\d+$/).test(key));\n    this.ENCOUNTER_TABLE_TYPES = EncounterTableType;\n    this.ENCOUNTER_OPTIONS = Object.keys(EncounterTableType).filter(key => !RegExp(/^\\d+$/).test(key));\n    this.form = new UntypedFormGroup({\n      location: new UntypedFormControl(),\n      name: new UntypedFormControl(),\n      type: new UntypedFormControl()\n    });\n  }\n  ngOnInit() {}\n  ngOnChanges(changes) {\n    if (doesExist(changes.name) && !areEqual(changes.name.previousValue, changes.name.currentValue)) {\n      this.form.patchValue({\n        name: changes.name.currentValue\n      });\n    }\n    if (doesExist(changes.type) && !areEqual(changes.type.previousValue, changes.type.currentValue)) {\n      this.form.patchValue({\n        type: changes.type.currentValue\n      });\n    }\n    if (doesExist(changes.location) && !areEqual(changes.location.previousValue, changes.location.currentValue)) {\n      this.form.patchValue({\n        location: changes.location.currentValue\n      });\n    }\n  }\n  clear() {\n    this.form.reset();\n  }\n  reset() {\n    this.form.patchValue({\n      location: this.location,\n      name: this.name,\n      type: this.type\n    });\n  }\n  save() {\n    this.createEncounterTableAction.emit({\n      action: CreateEncounterTableAction.SAVE_CONFIG,\n      payload: this.form.value\n    });\n  }\n}\nConfigureEncounterTableComponent.ɵfac = function ConfigureEncounterTableComponent_Factory(t) {\n  return new (t || ConfigureEncounterTableComponent)();\n};\nConfigureEncounterTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ConfigureEncounterTableComponent,\n  selectors: [[\"greg-configure-encounter-table\"]],\n  inputs: {\n    location: \"location\",\n    name: \"name\",\n    type: \"type\"\n  },\n  outputs: {\n    createEncounterTableAction: \"createEncounterTableAction\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 24,\n  vars: 3,\n  consts: [[3, \"formGroup\"], [1, \"action-bar\"], [3, \"click\"], [1, \"config-form\"], [\"for\", \"name\"], [\"formControlName\", \"name\", \"name\", \"name\", \"type\", \"text\"], [\"for\", \"type\"], [\"formControlName\", \"type\", \"name\", \"type\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"location\"], [\"formControlName\", \"location\", \"name\", \"location\"], [3, \"value\"]],\n  template: function ConfigureEncounterTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Configure Encounter Table\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"section\", 0)(3, \"div\", 1)(4, \"a\", 2);\n      i0.ɵɵlistener(\"click\", function ConfigureEncounterTableComponent_Template_a_click_4_listener() {\n        return ctx.clear();\n      });\n      i0.ɵɵtext(5, \"Clear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \" | \");\n      i0.ɵɵelementStart(7, \"a\", 2);\n      i0.ɵɵlistener(\"click\", function ConfigureEncounterTableComponent_Template_a_click_7_listener() {\n        return ctx.reset();\n      });\n      i0.ɵɵtext(8, \"Reset\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(9, \" | \");\n      i0.ɵɵelementStart(10, \"a\", 2);\n      i0.ɵɵlistener(\"click\", function ConfigureEncounterTableComponent_Template_a_click_10_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(11, \"Save\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 4);\n      i0.ɵɵtext(14, \"Table Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 5);\n      i0.ɵɵelementStart(16, \"label\", 6);\n      i0.ɵɵtext(17, \"Table Type:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"select\", 7);\n      i0.ɵɵtemplate(19, ConfigureEncounterTableComponent_option_19_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"label\", 9);\n      i0.ɵɵtext(21, \"Location:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"select\", 10);\n      i0.ɵɵtemplate(23, ConfigureEncounterTableComponent_option_23_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ENCOUNTER_OPTIONS);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.LOCATION_OPTIONS);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"div[_ngcontent-%COMP%] {\\n  margin-bottom: 0.5em;\\n}\\ndiv.action-bar[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\ndiv.config-form[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n}\\n/*# sourceURL=webpack://./src/app/encounter/create-encounter-table/components/configure-encounter-table/configure-encounter-table.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW5jb3VudGVyL2NyZWF0ZS1lbmNvdW50ZXItdGFibGUvY29tcG9uZW50cy9jb25maWd1cmUtZW5jb3VudGVyLXRhYmxlL2NvbmZpZ3VyZS1lbmNvdW50ZXItdGFibGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQkFBQTtBQUNGO0FBQ0U7RUFDRSxrQkFBQTtBQUNKO0FBRUU7RUFDRSxhQUFBO0VBQ0EscUNBQUE7QUFBSiIsInNvdXJjZXNDb250ZW50IjpbImRpdiB7XG4gIG1hcmdpbi1ib3R0b206IDAuNWVtO1xufVxuZGl2LmFjdGlvbi1iYXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5kaXYuY29uZmlnLWZvcm0ge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","SimpleChanges","UntypedFormControl","UntypedFormGroup","CreateEncounterTableAction","EncounterLocation","EncounterTableType","areEqual","doesExist","i0","ConfigureEncounterTableComponent","constructor","Object","keys","filter","key","RegExp","test","location","name","type","ngOnInit","ngOnChanges","changes","previousValue","currentValue","form","patchValue","clear","reset","save","createEncounterTableAction","emit","action","SAVE_CONFIG","payload","value","selectors","inputs","outputs","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\encounter\\create-encounter-table\\components\\configure-encounter-table\\configure-encounter-table.component.ts","D:\\workspaces\\greg\\src\\app\\encounter\\create-encounter-table\\components\\configure-encounter-table\\configure-encounter-table.component.html"],"sourcesContent":["import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup } from '@angular/forms';\r\nimport { CreateEncounterTableAction } from '@encounter/create-encounter-table/model/create-encounter-table-action.enum';\r\nimport { ICreateEncounterTableAction } from '@encounter/create-encounter-table/model/create-encounter-table-action.interface';\r\nimport { EncounterLocation } from '@encounter/encounter-shared/model/encounter-locationS.enum';\r\nimport { EncounterTableType } from '@encounter/encounter-shared/model/encounter-table-types.enum';\r\nimport { areEqual, doesExist } from '@shared/utilities/common-util/common.util';\r\n\r\n@Component({\r\n  selector: 'greg-configure-encounter-table',\r\n  templateUrl: './configure-encounter-table.component.html',\r\n  styleUrls: ['./configure-encounter-table.component.scss'],\r\n})\r\nexport class ConfigureEncounterTableComponent implements OnInit, OnChanges {\r\n  @Input() location: EncounterLocation;\r\n  @Input() name: string;\r\n  @Input() type: EncounterTableType;\r\n  @Output() createEncounterTableAction = new EventEmitter<\r\n    ICreateEncounterTableAction\r\n  >();\r\n\r\n  readonly LOCATION_TYPES = EncounterLocation;\r\n  readonly LOCATION_OPTIONS = Object.keys(EncounterLocation).filter(\r\n    (key) => !RegExp(/^\\d+$/).test(key)\r\n  );\r\n  readonly ENCOUNTER_TABLE_TYPES = EncounterTableType;\r\n  readonly ENCOUNTER_OPTIONS = Object.keys(EncounterTableType).filter(\r\n    (key) => !RegExp(/^\\d+$/).test(key)\r\n  );\r\n\r\n  form: UntypedFormGroup = new UntypedFormGroup({\r\n    location: new UntypedFormControl(),\r\n    name: new UntypedFormControl(),\r\n    type: new UntypedFormControl(),\r\n  });\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      doesExist(changes.name) &&\r\n      !areEqual(changes.name.previousValue, changes.name.currentValue)\r\n    ) {\r\n      this.form.patchValue({ name: changes.name.currentValue });\r\n    }\r\n    if (\r\n      doesExist(changes.type) &&\r\n      !areEqual(changes.type.previousValue, changes.type.currentValue)\r\n    ) {\r\n      this.form.patchValue({\r\n        type: changes.type.currentValue as EncounterTableType,\r\n      });\r\n    }\r\n    if (\r\n      doesExist(changes.location) &&\r\n      !areEqual(changes.location.previousValue, changes.location.currentValue)\r\n    ) {\r\n      this.form.patchValue({\r\n        location: changes.location.currentValue as EncounterLocation,\r\n      });\r\n    }\r\n  }\r\n\r\n  clear(): void {\r\n    this.form.reset();\r\n  }\r\n\r\n  reset(): void {\r\n    this.form.patchValue({\r\n      location: this.location,\r\n      name: this.name,\r\n      type: this.type,\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.createEncounterTableAction.emit({\r\n      action: CreateEncounterTableAction.SAVE_CONFIG,\r\n      payload: this.form.value,\r\n    } as ICreateEncounterTableAction);\r\n  }\r\n}\r\n","<h2>Configure Encounter Table</h2>\r\n<section [formGroup]=\"form\">\r\n  <div class=\"action-bar\">\r\n    <a (click)=\"clear()\">Clear</a>\r\n    |\r\n    <a (click)=\"reset()\">Reset</a>\r\n    |\r\n    <a (click)=\"save()\">Save</a>\r\n  </div>\r\n  <div class=\"config-form\">\r\n    <label for=\"name\">Table Name:</label>\r\n    <input formControlName=\"name\" name=\"name\" type=\"text\" />\r\n\r\n    <label for=\"type\">Table Type:</label>\r\n    <select formControlName=\"type\" name=\"type\">\r\n      <option\r\n        *ngFor=\"let option of ENCOUNTER_OPTIONS\"\r\n        [value]=\"ENCOUNTER_TABLE_TYPES[option]\"\r\n      >\r\n        {{ option }}\r\n      </option>\r\n    </select>\r\n\r\n    <label for=\"location\">Location:</label>\r\n    <select formControlName=\"location\" name=\"location\">\r\n      <option\r\n        *ngFor=\"let option of LOCATION_OPTIONS\"\r\n        [value]=\"LOCATION_TYPES[option]\"\r\n      >\r\n        {{ option }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n</section>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}