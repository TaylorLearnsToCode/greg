{"ast":null,"code":"import { doesExist } from '../utilities/common-util/common.util';\n/** Object representing the roll of a set of like-faced dice */\nexport class DiceRolled {\n  constructor(diceRolled) {\n    diceRolled = doesExist(diceRolled) ? diceRolled : {};\n    this.modifier = doesExist(diceRolled.modifier) ? diceRolled.modifier : 0;\n    this.multiplier = doesExist(diceRolled.multiplier) ? diceRolled.multiplier : 1;\n    this.no = doesExist(diceRolled.no) ? diceRolled.no : 1;\n    this.pips = doesExist(diceRolled.pips) ? diceRolled.pips : 6;\n  }\n  toString() {\n    return ''.concat(this.no.toString(), 'D', this.pips.toString(), this.modifier < 0 ? this.modifier.toString() : this.modifier > 0 ? `+${this.modifier}` : '', this.multiplier !== 1 ? `x${this.multiplier}` : '');\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,QAAQ,sCAAsC;AAEhE;AACA,OAAM,MAAOC,UAAU;EAUrBC,YAAYC,UAAuB;IACjCA,UAAU,GAAGH,SAAS,CAACG,UAAU,CAAC,GAAGA,UAAU,GAAI,EAAiB;IACpE,IAAI,CAACC,QAAQ,GAAGJ,SAAS,CAACG,UAAU,CAACC,QAAQ,CAAC,GAAGD,UAAU,CAACC,QAAQ,GAAG,CAAC;IACxE,IAAI,CAACC,UAAU,GAAGL,SAAS,CAACG,UAAU,CAACE,UAAU,CAAC,GAC9CF,UAAU,CAACE,UAAU,GACrB,CAAC;IACL,IAAI,CAACC,EAAE,GAAGN,SAAS,CAACG,UAAU,CAACG,EAAE,CAAC,GAAGH,UAAU,CAACG,EAAE,GAAG,CAAC;IACtD,IAAI,CAACC,IAAI,GAAGP,SAAS,CAACG,UAAU,CAACI,IAAI,CAAC,GAAGJ,UAAU,CAACI,IAAI,GAAG,CAAC;EAC9D;EAEAC,QAAQ;IACN,OAAO,EAAE,CAACC,MAAM,CACd,IAAI,CAACH,EAAE,CAACE,QAAQ,EAAE,EAClB,GAAG,EACH,IAAI,CAACD,IAAI,CAACC,QAAQ,EAAE,EACpB,IAAI,CAACJ,QAAQ,GAAG,CAAC,GACb,IAAI,CAACA,QAAQ,CAACI,QAAQ,EAAE,GACxB,IAAI,CAACJ,QAAQ,GAAG,CAAC,GACjB,IAAI,IAAI,CAACA,QAAQ,EAAE,GACnB,EAAE,EACN,IAAI,CAACC,UAAU,KAAK,CAAC,GAAG,IAAI,IAAI,CAACA,UAAU,EAAE,GAAG,EAAE,CACnD;EACH","names":["doesExist","DiceRolled","constructor","diceRolled","modifier","multiplier","no","pips","toString","concat"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\shared\\model\\dice-rolled.model.ts"],"sourcesContent":["import { doesExist } from '../utilities/common-util/common.util';\r\n\r\n/** Object representing the roll of a set of like-faced dice */\r\nexport class DiceRolled {\r\n  /** A number to be added to or taken away from the roll */\r\n  modifier: number;\r\n  /** A number by which the roll should be multiplied */\r\n  multiplier: number;\r\n  /** The total number of dice of a given size to be rolled */\r\n  no: number;\r\n  /** The number of sides or results of the die: so, 6 for D6; 8 for D8 */\r\n  pips: number;\r\n\r\n  constructor(diceRolled?: DiceRolled) {\r\n    diceRolled = doesExist(diceRolled) ? diceRolled : ({} as DiceRolled);\r\n    this.modifier = doesExist(diceRolled.modifier) ? diceRolled.modifier : 0;\r\n    this.multiplier = doesExist(diceRolled.multiplier)\r\n      ? diceRolled.multiplier\r\n      : 1;\r\n    this.no = doesExist(diceRolled.no) ? diceRolled.no : 1;\r\n    this.pips = doesExist(diceRolled.pips) ? diceRolled.pips : 6;\r\n  }\r\n\r\n  toString(): string {\r\n    return ''.concat(\r\n      this.no.toString(),\r\n      'D',\r\n      this.pips.toString(),\r\n      this.modifier < 0\r\n        ? this.modifier.toString()\r\n        : this.modifier > 0\r\n        ? `+${this.modifier}`\r\n        : '',\r\n      this.multiplier !== 1 ? `x${this.multiplier}` : ''\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}