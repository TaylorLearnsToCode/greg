{"ast":null,"code":"import { doesExist } from '@shared/utilities/common-util/common.util';\nimport { SaveAsClass } from './save-as-class.enum';\n/** How a given monster saves, referencing player class and level. */\nexport class SaveAs {\n  constructor(saveAs) {\n    saveAs = doesExist(saveAs) ? saveAs : {};\n    this.asClass = doesExist(saveAs.asClass) ? saveAs.asClass : SaveAsClass.FTR;\n    this.level = doesExist(saveAs.level) ? saveAs.level : 0;\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,QAAQ,2CAA2C;AACrE,SAASC,WAAW,QAAQ,sBAAsB;AAElD;AACA,OAAM,MAAOC,MAAM;EAMjBC,YAAYC,MAAe;IACzBA,MAAM,GAAGJ,SAAS,CAACI,MAAM,CAAC,GAAGA,MAAM,GAAI,EAAa;IACpD,IAAI,CAACC,OAAO,GAAGL,SAAS,CAACI,MAAM,CAACC,OAAO,CAAC,GACnCD,MAAM,CAACC,OAAuB,GAC/BJ,WAAW,CAACK,GAAG;IACnB,IAAI,CAACC,KAAK,GAAGP,SAAS,CAACI,MAAM,CAACG,KAAK,CAAC,GAAGH,MAAM,CAACG,KAAK,GAAG,CAAC;EACzD","names":["doesExist","SaveAsClass","SaveAs","constructor","saveAs","asClass","FTR","level"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\shared\\model\\save-as.model.ts"],"sourcesContent":["import { doesExist } from '@shared/utilities/common-util/common.util';\r\nimport { SaveAsClass } from './save-as-class.enum';\r\n\r\n/** How a given monster saves, referencing player class and level. */\r\nexport class SaveAs {\r\n  /** The playable class against whose table to compare for saves. */\r\n  asClass: SaveAsClass;\r\n  /** The level to check on the referenced class' description when consulting saves. */\r\n  level: number;\r\n\r\n  constructor(saveAs?: SaveAs) {\r\n    saveAs = doesExist(saveAs) ? saveAs : ({} as SaveAs);\r\n    this.asClass = doesExist(saveAs.asClass)\r\n      ? (saveAs.asClass as SaveAsClass)\r\n      : SaveAsClass.FTR;\r\n    this.level = doesExist(saveAs.level) ? saveAs.level : 0;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}