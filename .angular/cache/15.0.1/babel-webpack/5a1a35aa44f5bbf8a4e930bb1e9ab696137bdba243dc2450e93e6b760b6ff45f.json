{"ast":null,"code":"import { DiceRangePipe } from '@shared/pipes/dice-range/dice-range.pipe';\nimport * as i0 from \"@angular/core\";\nexport class WeaponAttacksPipe extends DiceRangePipe {\n  transform(weapons) {\n    return `${weapons.map(weapon => `${weapon.name} (${super.transform(weapon.damage)})`).join('\\n ').trim()}`;\n  }\n}\nWeaponAttacksPipe.ɵfac = /*@__PURE__*/function () {\n  let ɵWeaponAttacksPipe_BaseFactory;\n  return function WeaponAttacksPipe_Factory(t) {\n    return (ɵWeaponAttacksPipe_BaseFactory || (ɵWeaponAttacksPipe_BaseFactory = i0.ɵɵgetInheritedFactory(WeaponAttacksPipe)))(t || WeaponAttacksPipe);\n  };\n}();\nWeaponAttacksPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"weaponAttacks\",\n  type: WeaponAttacksPipe,\n  pure: true\n});","map":{"version":3,"mappings":"AAEA,SAASA,aAAa,QAAQ,0CAA0C;;AAKxE,OAAM,MAAOC,iBAAkB,SAAQD,aAAa;EAClDE,SAAS,CAACC,OAAiB;IACzB,OAAO,GAAGA,OAAO,CACdC,GAAG,CAAEC,MAAM,IAAK,GAAGA,MAAM,CAACC,IAAI,KAAK,KAAK,CAACJ,SAAS,CAACG,MAAM,CAACE,MAAM,CAAC,GAAG,CAAC,CACrEC,IAAI,CAAC,KAAK,CAAC,CACXC,IAAI,EAAE,EAAE;EACb;;;;;yGANWR,iBAAiB,SAAjBA,iBAAiB;EAAA;AAAA;;;QAAjBA,iBAAiB;EAAAS;AAAA","names":["DiceRangePipe","WeaponAttacksPipe","transform","weapons","map","weapon","name","damage","join","trim","pure"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\encounter\\encounter-shared\\pipes\\weapon-attacks\\weapon-attacks.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Weapon } from '@shared/model/weapon.model';\r\nimport { DiceRangePipe } from '@shared/pipes/dice-range/dice-range.pipe';\r\n\r\n@Pipe({\r\n  name: 'weaponAttacks',\r\n})\r\nexport class WeaponAttacksPipe extends DiceRangePipe implements PipeTransform {\r\n  transform(weapons: Weapon[]): string {\r\n    return `${weapons\r\n      .map((weapon) => `${weapon.name} (${super.transform(weapon.damage)})`)\r\n      .join('\\n ')\r\n      .trim()}`;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}