{"ast":null,"code":"import { EncounterTable } from '@encounter/encounter-shared/model/encounter-table.model';\nimport { PageDisplayMode } from '@shared/model/page-display-mode.enum';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/create-encounter-table-facade/create-encounter-table-facade.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../shared/templates/page-template/page-template.component\";\nimport * as i4 from \"../components/configure-dice-rolled/configure-dice-rolled.component\";\nimport * as i5 from \"../components/configure-encounter-table/configure-encounter-table.component\";\nimport * as i6 from \"../components/create-encounter-actions/create-encounter-actions.component\";\nimport * as i7 from \"../components/display-table-print/display-table-print.component\";\nimport * as i8 from \"../components/display-table-web/display-table-web.component\";\nimport * as i9 from \"../components/edit-encounter-table/edit-encounter-table.component\";\nfunction CreateEncounterTableComponent_section_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\");\n    i0.ɵɵelement(1, \"greg-display-table-print\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const encounterTable_r4 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"encounterTable\", encounterTable_r4);\n  }\n}\nfunction CreateEncounterTableComponent_section_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 6)(1, \"greg-configure-encounter-table\", 7);\n    i0.ɵɵlistener(\"createEncounterTableAction\", function CreateEncounterTableComponent_section_8_Template_greg_configure_encounter_table_createEncounterTableAction_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onCreateEncounterTableAction($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const combinedConfig_r5 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"location\", combinedConfig_r5[0])(\"name\", combinedConfig_r5[1])(\"type\", combinedConfig_r5[2]);\n  }\n}\nfunction CreateEncounterTableComponent_section_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 8)(1, \"greg-configure-dice-rolled\", 9);\n    i0.ɵɵlistener(\"createEncounterTableAction\", function CreateEncounterTableComponent_section_10_Template_greg_configure_dice_rolled_createEncounterTableAction_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onCreateEncounterTableAction($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const diceRolled_r8 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"diceRolled\", diceRolled_r8);\n  }\n}\nfunction CreateEncounterTableComponent_section_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 10)(1, \"greg-edit-encounter-table\", 11);\n    i0.ɵɵlistener(\"createEncounterTableAction\", function CreateEncounterTableComponent_section_12_Template_greg_edit_encounter_table_createEncounterTableAction_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onCreateEncounterTableAction($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const combinedEncounters_r11 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"diceRolled\", combinedEncounters_r11[0])(\"encounterRollMapping\", combinedEncounters_r11[1])(\"encounters\", combinedEncounters_r11[2]);\n  }\n}\nexport class CreateEncounterTableComponent {\n  constructor(facade) {\n    this.facade = facade;\n    /** Page display double-content, single column */\n    this.PAGE_DISPLAY_MODE = PageDisplayMode.STACKED;\n  }\n  ngOnInit() {\n    if (this.facade.initialize()) {\n      this.diceRolled$ = this.facade.diceRolled$;\n      this.encounterTable$ = combineLatest([this.facade.diceRolled$, this.facade.encounterRollMapping$, this.facade.encounters$, this.facade.location$, this.facade.name$, this.facade.type$]).pipe(map(([diceRolled, encounterRollMapping, encounters, location, name, type]) => new EncounterTable({\n        diceRolled,\n        encounterRollMapping,\n        encounters,\n        location,\n        name,\n        type\n      })));\n      this.combinedConfig$ = combineLatest([this.facade.location$, this.facade.name$, this.facade.type$]);\n      this.combinedEncounters$ = combineLatest([this.facade.diceRolled$, this.facade.encounterRollMapping$, this.facade.encounters$]);\n    }\n  }\n  ngOnDestroy() {\n    this.facade.destroy();\n  }\n  onCreateEncounterTableAction(event) {\n    this.facade.handleCreateEnounterTableAction(event);\n  }\n}\nCreateEncounterTableComponent.ɵfac = function CreateEncounterTableComponent_Factory(t) {\n  return new (t || CreateEncounterTableComponent)(i0.ɵɵdirectiveInject(i1.CreateEncounterTableFacadeService));\n};\nCreateEncounterTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateEncounterTableComponent,\n  selectors: [[\"greg-create-encounter-table\"]],\n  decls: 14,\n  vars: 13,\n  consts: [[\"headerText\", \"GREG - Create Encounter Table\", 3, \"pageDisplayMode\"], [4, \"ngIf\"], [\"class\", \"configure-table\", 4, \"ngIf\"], [\"class\", \"dice-rolled\", 4, \"ngIf\"], [\"class\", \"edit-table\", 4, \"ngIf\"], [3, \"encounterTable\"], [1, \"configure-table\"], [3, \"location\", \"name\", \"type\", \"createEncounterTableAction\"], [1, \"dice-rolled\"], [3, \"diceRolled\", \"createEncounterTableAction\"], [1, \"edit-table\"], [3, \"diceRolled\", \"encounterRollMapping\", \"encounters\", \"createEncounterTableAction\"]],\n  template: function CreateEncounterTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"greg-page-template\", 0)(1, \"first-content\");\n      i0.ɵɵelement(2, \"greg-create-encounter-actions\");\n      i0.ɵɵtemplate(3, CreateEncounterTableComponent_section_3_Template, 2, 1, \"section\", 1);\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelement(5, \"greg-display-table-web\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"second-content\")(7, \"div\");\n      i0.ɵɵtemplate(8, CreateEncounterTableComponent_section_8_Template, 2, 3, \"section\", 2);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵtemplate(10, CreateEncounterTableComponent_section_10_Template, 2, 1, \"section\", 3);\n      i0.ɵɵpipe(11, \"async\");\n      i0.ɵɵtemplate(12, CreateEncounterTableComponent_section_12_Template, 2, 3, \"section\", 4);\n      i0.ɵɵpipe(13, \"async\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"pageDisplayMode\", ctx.PAGE_DISPLAY_MODE);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 5, ctx.encounterTable$));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(9, 7, ctx.combinedConfig$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(11, 9, ctx.diceRolled$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(13, 11, ctx.combinedEncounters$));\n    }\n  },\n  dependencies: [i2.NgIf, i3.PageTemplateComponent, i4.ConfigureDiceRolledComponent, i5.ConfigureEncounterTableComponent, i6.CreateEncounterActionsComponent, i7.DisplayTablePrintComponent, i8.DisplayTableWebComponent, i9.EditEncounterTableComponent, i2.AsyncPipe],\n  styles: [\"div[_ngcontent-%COMP%] {\\n  column-gap: 1em;\\n  display: grid;\\n  grid-template-areas: \\\"left right\\\" \\\"bottom bottom\\\";\\n  grid-template-columns: repeat(2, 1fr);\\n}\\ndiv[_ngcontent-%COMP%]   .configure-table[_ngcontent-%COMP%] {\\n  grid-area: left;\\n}\\ndiv[_ngcontent-%COMP%]   .dice-rolled[_ngcontent-%COMP%] {\\n  grid-area: right;\\n}\\ndiv[_ngcontent-%COMP%]   .edit-table[_ngcontent-%COMP%] {\\n  grid-area: bottom;\\n}\\n/*# sourceURL=webpack://./src/app/encounter/create-encounter-table/create-encounter-table/create-encounter-table.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW5jb3VudGVyL2NyZWF0ZS1lbmNvdW50ZXItdGFibGUvY3JlYXRlLWVuY291bnRlci10YWJsZS9jcmVhdGUtZW5jb3VudGVyLXRhYmxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLGFBQUE7RUFDQSxpREFDRTtFQUVGLHFDQUFBO0FBREY7QUFHRTtFQUNFLGVBQUE7QUFESjtBQUlFO0VBQ0UsZ0JBQUE7QUFGSjtBQUtFO0VBQ0UsaUJBQUE7QUFISiIsInNvdXJjZXNDb250ZW50IjpbImRpdiB7XG4gIGNvbHVtbi1nYXA6IDFlbTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJsZWZ0IHJpZ2h0XCIgXCJib3R0b20gYm90dG9tXCI7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG59XG5kaXYgLmNvbmZpZ3VyZS10YWJsZSB7XG4gIGdyaWQtYXJlYTogbGVmdDtcbn1cbmRpdiAuZGljZS1yb2xsZWQge1xuICBncmlkLWFyZWE6IHJpZ2h0O1xufVxuZGl2IC5lZGl0LXRhYmxlIHtcbiAgZ3JpZC1hcmVhOiBib3R0b207XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,cAAc,QAAQ,yDAAyD;AAExF,SAASC,eAAe,QAAQ,sCAAsC;AACtE,SAASC,aAAa,QAAoB,MAAM;AAChD,SAASC,GAAG,QAAQ,gBAAgB;;;;;;;;;;;;;ICChCC,+BAA2D;IACzDA,8CAE4B;IAC9BA,iBAAU;;;;IAFNA,eAAiC;IAAjCA,kDAAiC;;;;;;IAOnCA,kCAGC;IAKGA;MAAAA;MAAA;MAAA,OAA8BA,0DAAoC;IAAA,EAAC;IACpEA,iBAAiC;;;;IAJhCA,eAA8B;IAA9BA,+CAA8B;;;;;;IAMlCA,kCAAuE;IAGnEA;MAAAA;MAAA;MAAA,OAA8BA,0DAAoC;IAAA,EAAC;IACpEA,iBAA6B;;;;IAF5BA,eAAyB;IAAzBA,0CAAyB;;;;;;IAI7BA,mCAGC;IAKGA;MAAAA;MAAA;MAAA,OAA8BA,2DAAoC;IAAA,EAAC;IACpEA,iBAA4B;;;;IAJ3BA,eAAoC;IAApCA,sDAAoC;;;ADvB9C,OAAM,MAAOC,6BAA6B;EASxCC,YAAoBC,MAAyC;IAAzC,WAAM,GAANA,MAAM;IAR1B;IACS,sBAAiB,GAAGN,eAAe,CAACO,OAAO;EAOY;EAEhEC,QAAQ;IACN,IAAI,IAAI,CAACF,MAAM,CAACG,UAAU,EAAE,EAAE;MAC5B,IAAI,CAACC,WAAW,GAAG,IAAI,CAACJ,MAAM,CAACI,WAAW;MAC1C,IAAI,CAACC,eAAe,GAAGV,aAAa,CAAC,CACnC,IAAI,CAACK,MAAM,CAACI,WAAW,EACvB,IAAI,CAACJ,MAAM,CAACM,qBAAqB,EACjC,IAAI,CAACN,MAAM,CAACO,WAAW,EACvB,IAAI,CAACP,MAAM,CAACQ,SAAS,EACrB,IAAI,CAACR,MAAM,CAACS,KAAK,EACjB,IAAI,CAACT,MAAM,CAACU,KAAK,CAClB,CAAC,CAACC,IAAI,CACLf,GAAG,CACD,CAAC,CACCgB,UAAU,EACVC,oBAAoB,EACpBC,UAAU,EACVC,QAAQ,EACRC,IAAI,EACJC,IAAI,CACL,KACC,IAAIxB,cAAc,CAAC;QACjBmB,UAAU;QACVC,oBAAoB;QACpBC,UAAU;QACVC,QAAQ;QACRC,IAAI;QACJC;OACiB,CAAC,CACvB,CACF;MACD,IAAI,CAACC,eAAe,GAAGvB,aAAa,CAAC,CACnC,IAAI,CAACK,MAAM,CAACQ,SAAS,EACrB,IAAI,CAACR,MAAM,CAACS,KAAK,EACjB,IAAI,CAACT,MAAM,CAACU,KAAK,CAClB,CAAC;MACF,IAAI,CAACS,mBAAmB,GAAGxB,aAAa,CAAC,CACvC,IAAI,CAACK,MAAM,CAACI,WAAW,EACvB,IAAI,CAACJ,MAAM,CAACM,qBAAqB,EACjC,IAAI,CAACN,MAAM,CAACO,WAAW,CACxB,CAAC;;EAEN;EAEAa,WAAW;IACT,IAAI,CAACpB,MAAM,CAACqB,OAAO,EAAE;EACvB;EAEAC,4BAA4B,CAACC,KAAkC;IAC7D,IAAI,CAACvB,MAAM,CAACwB,+BAA+B,CAACD,KAAK,CAAC;EACpD;;;mBA5DWzB,6BAA6B;AAAA;;QAA7BA,6BAA6B;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd1ChC,6CAGC;MAEGA,gDAA+D;MAC/DA,sFAIU;;MACVA,yCAAiD;MACnDA,iBAAgB;MAChBA,sCAAgB;MAEZA,sFAUU;;MACVA,wFAKU;;MACVA,wFAUU;;MACZA,iBAAM;;;MAzCRA,uDAAqC;MAIzBA,eAA8B;MAA9BA,gEAA8B;MAWnCA,eAA8B;MAA9BA,gEAA8B;MASHA,eAA0B;MAA1BA,6DAA0B;MAQrDA,eAAkC;MAAlCA,sEAAkC","names":["EncounterTable","PageDisplayMode","combineLatest","map","i0","CreateEncounterTableComponent","constructor","facade","STACKED","ngOnInit","initialize","diceRolled$","encounterTable$","encounterRollMapping$","encounters$","location$","name$","type$","pipe","diceRolled","encounterRollMapping","encounters","location","name","type","combinedConfig$","combinedEncounters$","ngOnDestroy","destroy","onCreateEncounterTableAction","event","handleCreateEnounterTableAction","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\encounter\\create-encounter-table\\create-encounter-table\\create-encounter-table.component.ts","D:\\workspaces\\greg\\src\\app\\encounter\\create-encounter-table\\create-encounter-table\\create-encounter-table.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { EncounterTable } from '@encounter/encounter-shared/model/encounter-table.model';\r\nimport { DiceRolled } from '@shared/model/dice-rolled.model';\r\nimport { PageDisplayMode } from '@shared/model/page-display-mode.enum';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ICreateEncounterTableAction } from '../model/create-encounter-table-action.interface';\r\nimport { CreateEncounterTableFacadeService } from '../services/create-encounter-table-facade/create-encounter-table-facade.service';\r\n\r\n@Component({\r\n  selector: 'greg-create-encounter-table',\r\n  templateUrl: './create-encounter-table.component.html',\r\n  styleUrls: ['./create-encounter-table.component.scss'],\r\n})\r\nexport class CreateEncounterTableComponent implements OnInit, OnDestroy {\r\n  /** Page display double-content, single column */\r\n  readonly PAGE_DISPLAY_MODE = PageDisplayMode.STACKED;\r\n\r\n  diceRolled$: Observable<DiceRolled[]>;\r\n  encounterTable$: Observable<EncounterTable>;\r\n  combinedConfig$: Observable<Array<{}>>;\r\n  combinedEncounters$: Observable<Array<{}>>;\r\n\r\n  constructor(private facade: CreateEncounterTableFacadeService) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.facade.initialize()) {\r\n      this.diceRolled$ = this.facade.diceRolled$;\r\n      this.encounterTable$ = combineLatest([\r\n        this.facade.diceRolled$,\r\n        this.facade.encounterRollMapping$,\r\n        this.facade.encounters$,\r\n        this.facade.location$,\r\n        this.facade.name$,\r\n        this.facade.type$,\r\n      ]).pipe(\r\n        map(\r\n          ([\r\n            diceRolled,\r\n            encounterRollMapping,\r\n            encounters,\r\n            location,\r\n            name,\r\n            type,\r\n          ]) =>\r\n            new EncounterTable({\r\n              diceRolled,\r\n              encounterRollMapping,\r\n              encounters,\r\n              location,\r\n              name,\r\n              type,\r\n            } as EncounterTable)\r\n        )\r\n      );\r\n      this.combinedConfig$ = combineLatest([\r\n        this.facade.location$,\r\n        this.facade.name$,\r\n        this.facade.type$,\r\n      ]);\r\n      this.combinedEncounters$ = combineLatest([\r\n        this.facade.diceRolled$,\r\n        this.facade.encounterRollMapping$,\r\n        this.facade.encounters$,\r\n      ]);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.facade.destroy();\r\n  }\r\n\r\n  onCreateEncounterTableAction(event: ICreateEncounterTableAction): void {\r\n    this.facade.handleCreateEnounterTableAction(event);\r\n  }\r\n}\r\n","<greg-page-template\r\n  headerText=\"GREG - Create Encounter Table\"\r\n  [pageDisplayMode]=\"PAGE_DISPLAY_MODE\"\r\n>\r\n  <first-content>\r\n    <greg-create-encounter-actions></greg-create-encounter-actions>\r\n    <section *ngIf=\"encounterTable$ | async as encounterTable\">\r\n      <greg-display-table-print\r\n        [encounterTable]=\"encounterTable\"\r\n      ></greg-display-table-print>\r\n    </section>\r\n    <greg-display-table-web></greg-display-table-web>\r\n  </first-content>\r\n  <second-content>\r\n    <div>\r\n      <section\r\n        class=\"configure-table\"\r\n        *ngIf=\"combinedConfig$ | async as combinedConfig\"\r\n      >\r\n        <greg-configure-encounter-table\r\n          [location]=\"combinedConfig[0]\"\r\n          [name]=\"combinedConfig[1]\"\r\n          [type]=\"combinedConfig[2]\"\r\n          (createEncounterTableAction)=\"onCreateEncounterTableAction($event)\"\r\n        ></greg-configure-encounter-table>\r\n      </section>\r\n      <section class=\"dice-rolled\" *ngIf=\"diceRolled$ | async as diceRolled\">\r\n        <greg-configure-dice-rolled\r\n          [diceRolled]=\"diceRolled\"\r\n          (createEncounterTableAction)=\"onCreateEncounterTableAction($event)\"\r\n        ></greg-configure-dice-rolled>\r\n      </section>\r\n      <section\r\n        class=\"edit-table\"\r\n        *ngIf=\"combinedEncounters$ | async as combinedEncounters\"\r\n      >\r\n        <greg-edit-encounter-table\r\n          [diceRolled]=\"combinedEncounters[0]\"\r\n          [encounterRollMapping]=\"combinedEncounters[1]\"\r\n          [encounters]=\"combinedEncounters[2]\"\r\n          (createEncounterTableAction)=\"onCreateEncounterTableAction($event)\"\r\n        ></greg-edit-encounter-table>\r\n      </section>\r\n    </div>\r\n  </second-content>\r\n</greg-page-template>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}