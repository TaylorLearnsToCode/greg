{"ast":null,"code":"import { MenuItem } from '../../model/menu-item.model';\nimport { RouteLabels } from '../../utilities/navigation-config/navigation-config.util';\nimport { doesExist } from '../common-util/common.util';\n/**\r\n * Converts a provided Route to a MenuItem with label.\r\n * Any child routes are likewise converted recursively.\r\n * @param  {Route} route\r\n */\nexport function routeToMenuItem(route) {\n  return new MenuItem({\n    children: route.children ? route.children.map(childRoute => routeToMenuItem(childRoute)) : [],\n    id: route.path,\n    label: doesExist(RouteLabels[route.path]) ? RouteLabels[route.path] : route.path,\n    routerLink: `/${route.path}`\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,WAAW,QAAQ,0DAA0D;AACtF,SAASC,SAAS,QAAQ,4BAA4B;AAEtD;;;;;AAKA,OAAM,SAAUC,eAAe,CAACC,KAAY;EAC1C,OAAO,IAAIJ,QAAQ,CAAC;IAClBK,QAAQ,EAAED,KAAK,CAACC,QAAQ,GACpBD,KAAK,CAACC,QAAQ,CAACC,GAAG,CAAEC,UAAU,IAAKJ,eAAe,CAACI,UAAU,CAAC,CAAC,GAC/D,EAAE;IACNC,EAAE,EAAEJ,KAAK,CAACK,IAAI;IACdC,KAAK,EAAER,SAAS,CAACD,WAAW,CAACG,KAAK,CAACK,IAAI,CAAC,CAAC,GACrCR,WAAW,CAACG,KAAK,CAACK,IAAI,CAAC,GACvBL,KAAK,CAACK,IAAI;IACdE,UAAU,EAAE,IAAIP,KAAK,CAACK,IAAI;GACf,CAAC;AAChB","names":["MenuItem","RouteLabels","doesExist","routeToMenuItem","route","children","map","childRoute","id","path","label","routerLink"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\shared\\utilities\\conversion-util\\conversion.util.ts"],"sourcesContent":["import { Route } from '@angular/router';\r\nimport { MenuItem } from '../../model/menu-item.model';\r\nimport { RouteLabels } from '../../utilities/navigation-config/navigation-config.util';\r\nimport { doesExist } from '../common-util/common.util';\r\n\r\n/**\r\n * Converts a provided Route to a MenuItem with label.\r\n * Any child routes are likewise converted recursively.\r\n * @param  {Route} route\r\n */\r\nexport function routeToMenuItem(route: Route): MenuItem {\r\n  return new MenuItem({\r\n    children: route.children\r\n      ? route.children.map((childRoute) => routeToMenuItem(childRoute))\r\n      : [],\r\n    id: route.path,\r\n    label: doesExist(RouteLabels[route.path])\r\n      ? RouteLabels[route.path]\r\n      : route.path,\r\n    routerLink: `/${route.path}`,\r\n  } as MenuItem);\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}