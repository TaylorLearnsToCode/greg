{"ast":null,"code":"import { BoundedRange } from '@shared/model/bounded-range.model';\nimport { doesExist } from '@shared/utilities/common-util/common.util';\n/** Base class for magic items, maps, or other equivalent articles of treasure. */\nexport class MagicItem {\n  constructor() {\n    this.name = '';\n    this.description = '';\n  }\n}\n/** Result entry for tables of magic items against which percentile rolls can be made. */\nexport class MagicItemTableEntry {\n  constructor(magicItemTableEntry) {\n    /** The percentile chance of encountering this item. Valid range is 1 to 100. */\n    this.chanceOf = new BoundedRange();\n    this.entry = new MagicItem();\n    if (doesExist(magicItemTableEntry)) {\n      Object.keys(this).forEach(key => {\n        if (doesExist(magicItemTableEntry[key])) {\n          this[key] = magicItemTableEntry[key];\n        }\n      });\n    }\n  }\n}\n/** Model class for a table of magic items on which percentile rolls can be made. */\nexport class MagicItemTable {\n  constructor() {\n    this.name = '';\n    this.entries = [];\n  }\n}\n/** Result entry for <i>nested</i> tables of magic items against which percentile rolls can be made. */\nexport class NestedMagicItemTableEntry {\n  constructor() {\n    /** The percentile chance of encountering this item. Valid range is 1 to 100. */\n    this.chanceOf = new BoundedRange();\n  }\n}\n/** Model class for a nested table of magic items against which percentile rolls can be made. */\nexport class NestedMagicItemTable {\n  constructor() {\n    this.name = '';\n    this.entries = [];\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAQ,mCAAmC;AAChE,SAASC,SAAS,QAAQ,2CAA2C;AAGrE;AACA,OAAM,MAAOC,SAAS;EAAtBC;IACE,SAAI,GAAW,EAAE;IACjB,gBAAW,GAAW,EAAE;EAC1B;;AAEA;AACA,OAAM,MAAOC,mBAAmB;EAK9BD,YAAYE,mBAAyC;IAJrD;IACA,aAAQ,GAAiB,IAAIL,YAAY,EAAE;IAC3C,UAAK,GAA2C,IAAIE,SAAS,EAAE;IAG7D,IAAID,SAAS,CAACI,mBAAmB,CAAC,EAAE;MAClCC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAACC,OAAO,CAAEC,GAAG,IAAI;QAChC,IAAIR,SAAS,CAACI,mBAAmB,CAACI,GAAG,CAAC,CAAC,EAAE;UACvC,IAAI,CAACA,GAAG,CAAC,GAAGJ,mBAAmB,CAACI,GAAG,CAAC;;MAExC,CAAC,CAAC;;EAEN;;AAGF;AACA,OAAM,MAAOC,cAAc;EAA3BP;IACE,SAAI,GAAW,EAAE;IACjB,YAAO,GAA0B,EAAE;EACrC;;AAEA;AACA,OAAM,MAAOQ,yBAAyB;EAAtCR;IACE;IACA,aAAQ,GAAiB,IAAIH,YAAY,EAAE;EAE7C;;AAEA;AACA,OAAM,MAAOY,oBAAoB;EAAjCT;IACE,SAAI,GAAW,EAAE;IACjB,YAAO,GAAgC,EAAE;EAC3C","names":["BoundedRange","doesExist","MagicItem","constructor","MagicItemTableEntry","magicItemTableEntry","Object","keys","forEach","key","MagicItemTable","NestedMagicItemTableEntry","NestedMagicItemTable"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\treasure\\treasure-common\\model\\magic-item.model.ts"],"sourcesContent":["import { BoundedRange } from '@shared/model/bounded-range.model';\r\nimport { doesExist } from '@shared/utilities/common-util/common.util';\r\nimport { MagicItemMap, TreasureMap } from './treasure-map.model';\r\n\r\n/** Base class for magic items, maps, or other equivalent articles of treasure. */\r\nexport class MagicItem {\r\n  name: string = '';\r\n  description: string = '';\r\n}\r\n\r\n/** Result entry for tables of magic items against which percentile rolls can be made. */\r\nexport class MagicItemTableEntry {\r\n  /** The percentile chance of encountering this item. Valid range is 1 to 100. */\r\n  chanceOf: BoundedRange = new BoundedRange();\r\n  entry: MagicItem | TreasureMap | MagicItemMap = new MagicItem();\r\n\r\n  constructor(magicItemTableEntry?: MagicItemTableEntry) {\r\n    if (doesExist(magicItemTableEntry)) {\r\n      Object.keys(this).forEach((key) => {\r\n        if (doesExist(magicItemTableEntry[key])) {\r\n          this[key] = magicItemTableEntry[key];\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/** Model class for a table of magic items on which percentile rolls can be made. */\r\nexport class MagicItemTable {\r\n  name: string = '';\r\n  entries: MagicItemTableEntry[] = [];\r\n}\r\n\r\n/** Result entry for <i>nested</i> tables of magic items against which percentile rolls can be made. */\r\nexport class NestedMagicItemTableEntry {\r\n  /** The percentile chance of encountering this item. Valid range is 1 to 100. */\r\n  chanceOf: BoundedRange = new BoundedRange();\r\n  entry: MagicItemTable | NestedMagicItemTable;\r\n}\r\n\r\n/** Model class for a nested table of magic items against which percentile rolls can be made. */\r\nexport class NestedMagicItemTable {\r\n  name: string = '';\r\n  entries: NestedMagicItemTableEntry[] = [];\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}