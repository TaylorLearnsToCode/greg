{"ast":null,"code":"import { PageDisplayMode } from '@shared/model/page-display-mode.enum';\nimport { doesExist } from '@shared/utilities/common-util/common.util';\nimport * as i0 from \"@angular/core\";\nfunction PageTemplateComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.headerSubtext);\n  }\n}\nfunction PageTemplateComponent_section_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 5);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = [[[\"first-content\"]], [[\"second-content\"]]];\nconst _c1 = [\"first-content\", \"second-content\"];\n/** Template component for a standard one-column or adaptive two-column layout. */\nexport class PageTemplateComponent {\n  constructor() {\n    /** Local read-only instance for supported page display modes. */\n    this.PAGE_DISPLAY_MODES = PageDisplayMode;\n  }\n  /** Read-only accessor for whether or not the subtext container in the header should render. */\n  get shouldDisplayHeaderSubtext() {\n    return this._shouldDisplayHeaderSubtext;\n  }\n  /** Read-only accessor for the style classes to be applied to the page template */\n  get wrapperClasses() {\n    return this._wrapperClasses;\n  }\n  /** Initializer Method. */\n  ngOnInit() {\n    this.initializeHeaderText();\n    this.setDisplayHeaderSubtext();\n    this.setWrapperClasses();\n  }\n  /** If no header text has been provided in the Input, defaults to application name. */\n  initializeHeaderText() {\n    if (!this.headerText) {\n      this.headerText = 'GREG - Guided Random Encounter Generator';\n    }\n  }\n  /**\r\n   * Sets displayHeaaderSubtext flag:\r\n   * * If no subtext is provided, sets to FALSE, hiding the element.\r\n   * * If subtext is provided, sets to TRUE, showing the element.\r\n   */\n  setDisplayHeaderSubtext() {\n    this._shouldDisplayHeaderSubtext = doesExist(this.headerSubtext);\n  }\n  /** Sets parent wrapper class to single or double based on pageDisplayMode input */\n  setWrapperClasses() {\n    this._wrapperClasses = [];\n    switch (this.pageDisplayMode) {\n      case PageDisplayMode.SINGLE:\n        {\n          this._wrapperClasses.push('page-template--single');\n          break;\n        }\n      case PageDisplayMode.STACKED:\n        {\n          this._wrapperClasses.push('page-template--stacked');\n          break;\n        }\n      case PageDisplayMode.DOUBLE:\n      default:\n        {\n          this._wrapperClasses.push('page-template--double');\n          break;\n        }\n    }\n  }\n}\nPageTemplateComponent.ɵfac = function PageTemplateComponent_Factory(t) {\n  return new (t || PageTemplateComponent)();\n};\nPageTemplateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PageTemplateComponent,\n  selectors: [[\"greg-page-template\"]],\n  inputs: {\n    headerText: \"headerText\",\n    headerSubtext: \"headerSubtext\",\n    pageDisplayMode: \"pageDisplayMode\"\n  },\n  ngContentSelectors: _c1,\n  decls: 10,\n  vars: 4,\n  consts: [[3, \"ngClass\"], [4, \"ngIf\"], [1, \"menu-bar\"], [1, \"first\"], [\"class\", \"second\", 4, \"ngIf\"], [1, \"second\"]],\n  template: function PageTemplateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"header\")(2, \"h1\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, PageTemplateComponent_div_4_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"section\", 2);\n      i0.ɵɵelement(6, \"greg-menu-bar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"section\", 3);\n      i0.ɵɵprojection(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, PageTemplateComponent_section_9_Template, 2, 0, \"section\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.wrapperClasses);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.headerText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.shouldDisplayHeaderSubtext);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.pageDisplayMode !== ctx.PAGE_DISPLAY_MODES.SINGLE);\n    }\n  },\n  styles: [\"header[_ngcontent-%COMP%] {\\n  padding-left: 2em;\\n  background: #292929;\\n  grid-area: header;\\n}\\nheader[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  font-style: italic;\\n  margin-bottom: 0.5em;\\n}\\n\\nsection[_ngcontent-%COMP%] {\\n  background-color: #333333;\\n  padding: 0.25em 0.5em;\\n}\\nsection.first[_ngcontent-%COMP%] {\\n  grid-area: first;\\n}\\nsection.second[_ngcontent-%COMP%] {\\n  grid-area: second;\\n}\\nsection.menu-bar[_ngcontent-%COMP%] {\\n  grid-area: menu;\\n}\\n\\n.page-template--stacked[_ngcontent-%COMP%], .page-template--single[_ngcontent-%COMP%], .page-template--double[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-rows: auto;\\n}\\n.page-template--stacked[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%], .page-template--single[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%], .page-template--double[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\\n  margin: 0.1em;\\n}\\n\\n.page-template--double[_ngcontent-%COMP%] {\\n  grid-template-columns: 1fr 1fr;\\n  grid-template-areas: \\\"header header\\\" \\\"menu menu\\\" \\\"first second\\\";\\n}\\n@media (max-width: 999px) {\\n  .page-template--double[_ngcontent-%COMP%] {\\n    grid-template-columns: 1fr;\\n    grid-template-areas: \\\"header\\\" \\\"menu\\\" \\\"first\\\" \\\"second\\\";\\n  }\\n}\\n\\n.page-template--single[_ngcontent-%COMP%] {\\n  grid-template-columns: auto;\\n  grid-template-areas: \\\"header\\\" \\\"menu\\\" \\\"first\\\";\\n}\\n\\n.page-template--stacked[_ngcontent-%COMP%] {\\n  grid-template-columns: auto;\\n  grid-template-areas: \\\"header\\\" \\\"menu\\\" \\\"first\\\" \\\"second\\\";\\n}\\n/*# sourceURL=webpack://./src/app/shared/templates/page-template/page-template.component.scss */\\n/*# sourceURL=webpack://./src/assets/styles/_variables.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL3RlbXBsYXRlcy9wYWdlLXRlbXBsYXRlL3BhZ2UtdGVtcGxhdGUuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi9zcmMvYXNzZXRzL3N0eWxlcy9fdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUNPRSxpQkFBQTtFRExBLG1CQ0RnQjtFREVoQixpQkFBQTtBQURGO0FBR0U7RUFDRSxrQkFBQTtFQUNBLG9CQUFBO0FBREo7O0FBS0E7RUFDRSx5QkNWaUI7RURXakIscUJBQUE7QUFGRjtBQUlFO0VBQ0UsZ0JBQUE7QUFGSjtBQUtFO0VBQ0UsaUJBQUE7QUFISjtBQU1FO0VBQ0UsZUFBQTtBQUpKOztBQVFBO0VBQ0UsYUFBQTtFQUNBLHdCQUFBO0FBTEY7QUFPRTtFQUNFLGFBQUE7QUFMSjs7QUFTQTtFQUVFLDhCQUFBO0VBQ0EsK0RBQ0U7QUFSSjtBQVlFO0VBUkY7SUFTSSwwQkFBQTtJQUNBLHFEQUNFO0VBVko7QUFDRjs7QUFnQkE7RUFFRSwyQkFBQTtFQUNBLDRDQUNFO0FBZko7O0FBb0JBO0VBRUUsMkJBQUE7RUFDQSxxREFDRTtBQW5CSiIsInNvdXJjZXNDb250ZW50IjpbImhlYWRlciB7XG4gIHBhZGRpbmctbGVmdDogMmVtO1xuICBiYWNrZ3JvdW5kOiAjMjkyOTI5O1xuICBncmlkLWFyZWE6IGhlYWRlcjtcbn1cbmhlYWRlciBkaXYge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIG1hcmdpbi1ib3R0b206IDAuNWVtO1xufVxuXG5zZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzMzMztcbiAgcGFkZGluZzogMC4yNWVtIDAuNWVtO1xufVxuc2VjdGlvbi5maXJzdCB7XG4gIGdyaWQtYXJlYTogZmlyc3Q7XG59XG5zZWN0aW9uLnNlY29uZCB7XG4gIGdyaWQtYXJlYTogc2Vjb25kO1xufVxuc2VjdGlvbi5tZW51LWJhciB7XG4gIGdyaWQtYXJlYTogbWVudTtcbn1cblxuLnBhZ2UtdGVtcGxhdGUtLXN0YWNrZWQsIC5wYWdlLXRlbXBsYXRlLS1zaW5nbGUsIC5wYWdlLXRlbXBsYXRlLS1kb3VibGUge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG59XG4ucGFnZS10ZW1wbGF0ZS0tc3RhY2tlZCA+ICosIC5wYWdlLXRlbXBsYXRlLS1zaW5nbGUgPiAqLCAucGFnZS10ZW1wbGF0ZS0tZG91YmxlID4gKiB7XG4gIG1hcmdpbjogMC4xZW07XG59XG5cbi5wYWdlLXRlbXBsYXRlLS1kb3VibGUge1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiaGVhZGVyIGhlYWRlclwiIFwibWVudSBtZW51XCIgXCJmaXJzdCBzZWNvbmRcIjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTlweCkge1xuICAucGFnZS10ZW1wbGF0ZS0tZG91YmxlIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImhlYWRlclwiIFwibWVudVwiIFwiZmlyc3RcIiBcInNlY29uZFwiO1xuICB9XG59XG5cbi5wYWdlLXRlbXBsYXRlLS1zaW5nbGUge1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiaGVhZGVyXCIgXCJtZW51XCIgXCJmaXJzdFwiO1xufVxuXG4ucGFnZS10ZW1wbGF0ZS0tc3RhY2tlZCB7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0bztcbiAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJoZWFkZXJcIiBcIm1lbnVcIiBcImZpcnN0XCIgXCJzZWNvbmRcIjtcbn0iLG51bGxdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,sCAAsC;AACtE,SAASC,SAAS,QAAQ,2CAA2C;;;;ICCjEC,2BAAwC;IAAAA,YAAmB;IAAAA,iBAAM;;;;IAAzBA,eAAmB;IAAnBA,0CAAmB;;;;;IAQ7DA,kCAA8E;IAC5EA,qBAAiD;IACnDA,iBAAU;;;;;ADTZ;AAMA,OAAM,MAAOC,qBAAqB;EALlCC;IAaE;IACS,uBAAkB,GAAGJ,eAAe;;EAE7C;EACA,IAAIK,0BAA0B;IAC5B,OAAO,IAAI,CAACC,2BAA2B;EACzC;EACA;EACA,IAAIC,cAAc;IAChB,OAAO,IAAI,CAACC,eAAe;EAC7B;EAOA;EACAC,QAAQ;IACN,IAAI,CAACC,oBAAoB,EAAE;IAC3B,IAAI,CAACC,uBAAuB,EAAE;IAC9B,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAEA;EACQF,oBAAoB;IAC1B,IAAI,CAAC,IAAI,CAACG,UAAU,EAAE;MACpB,IAAI,CAACA,UAAU,GAAG,0CAA0C;;EAEhE;EAEA;;;;;EAKQF,uBAAuB;IAC7B,IAAI,CAACL,2BAA2B,GAAGL,SAAS,CAAC,IAAI,CAACa,aAAa,CAAC;EAClE;EAEA;EACQF,iBAAiB;IACvB,IAAI,CAACJ,eAAe,GAAG,EAAE;IACzB,QAAQ,IAAI,CAACO,eAAe;MAC1B,KAAKf,eAAe,CAACgB,MAAM;QAAE;UAC3B,IAAI,CAACR,eAAe,CAACS,IAAI,CAAC,uBAAuB,CAAC;UAClD;;MAEF,KAAKjB,eAAe,CAACkB,OAAO;QAAE;UAC5B,IAAI,CAACV,eAAe,CAACS,IAAI,CAAC,wBAAwB,CAAC;UACnD;;MAEF,KAAKjB,eAAe,CAACmB,MAAM;MAC3B;QAAS;UACP,IAAI,CAACX,eAAe,CAACS,IAAI,CAAC,uBAAuB,CAAC;UAClD;;IACD;EAEL;;;mBAlEWd,qBAAqB;AAAA;;QAArBA,qBAAqB;EAAAiB;EAAAC;IAAAR;IAAAC;IAAAC;EAAA;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCVlCxB,8BAAgC;MAExBA,YAAgB;MAAAA,iBAAK;MACzBA,sEAAiE;MACnEA,iBAAS;MACTA,kCAA0B;MACxBA,gCAA+B;MACjCA,iBAAU;MACVA,kCAAuB;MACrBA,kBAAgD;MAClDA,iBAAU;MACVA,8EAEU;MACZA,iBAAM;;;MAdDA,4CAA0B;MAEvBA,eAAgB;MAAhBA,oCAAgB;MACdA,eAAgC;MAAhCA,qDAAgC;MAQ9BA,eAAmD;MAAnDA,4EAAmD","names":["PageDisplayMode","doesExist","i0","PageTemplateComponent","constructor","shouldDisplayHeaderSubtext","_shouldDisplayHeaderSubtext","wrapperClasses","_wrapperClasses","ngOnInit","initializeHeaderText","setDisplayHeaderSubtext","setWrapperClasses","headerText","headerSubtext","pageDisplayMode","SINGLE","push","STACKED","DOUBLE","selectors","inputs","ngContentSelectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\shared\\templates\\page-template\\page-template.component.ts","D:\\workspaces\\greg\\src\\app\\shared\\templates\\page-template\\page-template.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { PageDisplayMode } from '@shared/model/page-display-mode.enum';\r\nimport { doesExist } from '@shared/utilities/common-util/common.util';\r\n\r\n/** Template component for a standard one-column or adaptive two-column layout. */\r\n@Component({\r\n  selector: 'greg-page-template',\r\n  templateUrl: './page-template.component.html',\r\n  styleUrls: ['./page-template.component.scss'],\r\n})\r\nexport class PageTemplateComponent implements OnInit {\r\n  /** The title text of the page - to be printed as h1 */\r\n  @Input() headerText: string;\r\n  /** The subtitle text of the page - to be printed in italics */\r\n  @Input() headerSubtext: string;\r\n  /** How the layout should render; defaults to two-column, DOUBLE */\r\n  @Input() pageDisplayMode: PageDisplayMode;\r\n\r\n  /** Local read-only instance for supported page display modes. */\r\n  readonly PAGE_DISPLAY_MODES = PageDisplayMode;\r\n\r\n  /** Read-only accessor for whether or not the subtext container in the header should render. */\r\n  get shouldDisplayHeaderSubtext(): boolean {\r\n    return this._shouldDisplayHeaderSubtext;\r\n  }\r\n  /** Read-only accessor for the style classes to be applied to the page template */\r\n  get wrapperClasses(): string[] {\r\n    return this._wrapperClasses;\r\n  }\r\n\r\n  /** Private flag controlling whether or not to render the subtext container */\r\n  private _shouldDisplayHeaderSubtext: boolean;\r\n  /** Private container for style class to be applied to the page template wrapper */\r\n  private _wrapperClasses: string[];\r\n\r\n  /** Initializer Method. */\r\n  ngOnInit(): void {\r\n    this.initializeHeaderText();\r\n    this.setDisplayHeaderSubtext();\r\n    this.setWrapperClasses();\r\n  }\r\n\r\n  /** If no header text has been provided in the Input, defaults to application name. */\r\n  private initializeHeaderText(): void {\r\n    if (!this.headerText) {\r\n      this.headerText = 'GREG - Guided Random Encounter Generator';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets displayHeaaderSubtext flag:\r\n   * * If no subtext is provided, sets to FALSE, hiding the element.\r\n   * * If subtext is provided, sets to TRUE, showing the element.\r\n   */\r\n  private setDisplayHeaderSubtext(): void {\r\n    this._shouldDisplayHeaderSubtext = doesExist(this.headerSubtext);\r\n  }\r\n\r\n  /** Sets parent wrapper class to single or double based on pageDisplayMode input */\r\n  private setWrapperClasses(): void {\r\n    this._wrapperClasses = [];\r\n    switch (this.pageDisplayMode) {\r\n      case PageDisplayMode.SINGLE: {\r\n        this._wrapperClasses.push('page-template--single');\r\n        break;\r\n      }\r\n      case PageDisplayMode.STACKED: {\r\n        this._wrapperClasses.push('page-template--stacked');\r\n        break;\r\n      }\r\n      case PageDisplayMode.DOUBLE:\r\n      default: {\r\n        this._wrapperClasses.push('page-template--double');\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div [ngClass]=\"wrapperClasses\">\r\n  <header>\r\n    <h1>{{ headerText }}</h1>\r\n    <div *ngIf=\"shouldDisplayHeaderSubtext\">{{ headerSubtext }}</div>\r\n  </header>\r\n  <section class=\"menu-bar\">\r\n    <greg-menu-bar></greg-menu-bar>\r\n  </section>\r\n  <section class=\"first\">\r\n    <ng-content select=\"first-content\"></ng-content>\r\n  </section>\r\n  <section *ngIf=\"pageDisplayMode !== PAGE_DISPLAY_MODES.SINGLE\" class=\"second\">\r\n    <ng-content select=\"second-content\"></ng-content>\r\n  </section>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}