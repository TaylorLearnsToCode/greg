{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../shared/pipes/bounded-range/bounded-range.pipe\";\nimport * as i3 from \"../../../treasure-common/pipes/magic-item-display/magic-item-display.pipe\";\nfunction MagicItemPresenterComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"boundedRange\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"magicItemDisplay\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const itemEntry_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 2, itemEntry_r1.chanceOf), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 4, itemEntry_r1.entry), \" \");\n  }\n}\nexport class MagicItemPresenterComponent {\n  constructor() {}\n  ngOnInit() {}\n}\nMagicItemPresenterComponent.ɵfac = function MagicItemPresenterComponent_Factory(t) {\n  return new (t || MagicItemPresenterComponent)();\n};\nMagicItemPresenterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MagicItemPresenterComponent,\n  selectors: [[\"greg-magic-item-table-presenter\"]],\n  inputs: {\n    magicItem: \"magicItem\"\n  },\n  decls: 9,\n  vars: 2,\n  consts: [[1, \"result-header\"], [4, \"ngFor\", \"ngForOf\"], [1, \"chance-of\"]],\n  template: function MagicItemPresenterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"label\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"tr\")(4, \"th\");\n      i0.ɵɵtext(5, \"Chance\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 0);\n      i0.ɵɵtext(7, \"Result\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, MagicItemPresenterComponent_tr_8_Template, 7, 6, \"tr\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.magicItem.name);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.magicItem.entries);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.BoundedRangePipe, i3.MagicItemDisplayPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAMEA,0BAAgD;IAE5CA,YACF;;IAAAA,iBAAK;IACLA,0BAAI;IACFA,YACF;;IAAAA,iBAAK;;;;IAJHA,eACF;IADEA,4EACF;IAEEA,eACF;IADEA,yEACF;;;ACJJ,OAAM,MAAOC,2BAA2B;EAItCC,eAAe;EAEfC,QAAQ,IAAU;;;mBANPF,2BAA2B;AAAA;;QAA3BA,2BAA2B;EAAAG;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRxCV,6BAAO;MACEA,YAAoB;MAAAA,iBAAQ;MACnCA,0BAAI;MACEA,sBAAM;MAAAA,iBAAK;MACfA,6BAA0B;MAAAA,sBAAM;MAAAA,iBAAK;MAEvCA,0EAOK;MACPA,iBAAQ;;;MAbCA,eAAoB;MAApBA,wCAAoB;MAKDA,eAAoB;MAApBA,+CAAoB","names":["i0","MagicItemPresenterComponent","constructor","ngOnInit","selectors","inputs","magicItem","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\treasure\\create-nested-magic-item-table\\components\\magic-item-presenter\\magic-item-presenter.component.html","D:\\workspaces\\greg\\src\\app\\treasure\\create-nested-magic-item-table\\components\\magic-item-presenter\\magic-item-presenter.component.ts"],"sourcesContent":["<table>\n  <label>{{ magicItem.name }}</label>\n  <tr>\n    <th>Chance</th>\n    <th class=\"result-header\">Result</th>\n  </tr>\n  <tr *ngFor=\"let itemEntry of magicItem.entries\">\n    <td class=\"chance-of\">\n      {{ itemEntry.chanceOf | boundedRange }}\n    </td>\n    <td>\n      {{ itemEntry.entry | magicItemDisplay }}\n    </td>\n  </tr>\n</table>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MagicItemTable } from '@treasure/treasure-common/model/magic-item.model';\n\n@Component({\n  selector: 'greg-magic-item-table-presenter',\n  templateUrl: './magic-item-presenter.component.html',\n  styleUrls: ['./magic-item-presenter.component.scss'],\n})\nexport class MagicItemPresenterComponent implements OnInit {\n  @Input()\n  magicItem: MagicItemTable;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}