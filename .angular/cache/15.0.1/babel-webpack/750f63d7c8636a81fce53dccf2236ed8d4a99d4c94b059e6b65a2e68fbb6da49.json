{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport { doesExist } from '@shared/utilities/common-util/common.util';\nimport * as i0 from \"@angular/core\";\n/** Handler service for moving data out of the session. */\nexport class ExportService {\n  /**\r\n   * Export Service Constructor\r\n   * @param  {Document} document\r\n   */\n  constructor(document) {\n    this.document = document;\n  }\n  /**\r\n   * Converts a provided object to JSON and calls the browser to download it.\r\n   * @param  {any} obj\r\n   * @param  {string} fileName\r\n   */\n  exportAsJson(obj, fileName) {\n    fileName = doesExist(fileName) ? fileName.replace(' ', '') : 'export';\n    const payload = new Blob([JSON.stringify(obj)], {\n      type: 'text/plain'\n    });\n    const a = this.document.createElement('a');\n    a.href = URL.createObjectURL(payload);\n    a.download = `${fileName}.json`;\n    a.target = '_blank';\n    a.click();\n  }\n}\nExportService.ɵfac = function ExportService_Factory(t) {\n  return new (t || ExportService)(i0.ɵɵinject(DOCUMENT));\n};\nExportService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ExportService,\n  factory: ExportService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAE1C,SAASC,SAAS,QAAQ,2CAA2C;;AAErE;AAIA,OAAM,MAAOC,aAAa;EACxB;;;;EAIAC,YAAsCC,QAAkB;IAAlB,aAAQ,GAARA,QAAQ;EAAa;EAE3D;;;;;EAKAC,YAAY,CAACC,GAAQ,EAAEC,QAAgB;IACrCA,QAAQ,GAAGN,SAAS,CAACM,QAAQ,CAAC,GAAGA,QAAQ,CAACC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,QAAQ;IACrE,MAAMC,OAAO,GAAS,IAAIC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAACN,GAAG,CAAC,CAAC,EAAE;MACpDO,IAAI,EAAE;KACP,CAAC;IACF,MAAMC,CAAC,GAAsB,IAAI,CAACV,QAAQ,CAACW,aAAa,CAAC,GAAG,CAAC;IAC7DD,CAAC,CAACE,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACT,OAAO,CAAC;IACrCK,CAAC,CAACK,QAAQ,GAAG,GAAGZ,QAAQ,OAAO;IAC/BO,CAAC,CAACM,MAAM,GAAG,QAAQ;IACnBN,CAAC,CAACO,KAAK,EAAE;EACX;;;mBAtBWnB,aAAa,cAKJF,QAAQ;AAAA;;SALjBE,aAAa;EAAAoB,SAAbpB,aAAa;EAAAqB,YAFZ;AAAM","names":["DOCUMENT","doesExist","ExportService","constructor","document","exportAsJson","obj","fileName","replace","payload","Blob","JSON","stringify","type","a","createElement","href","URL","createObjectURL","download","target","click","factory","providedIn"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\shared\\services\\export\\export.service.ts"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { doesExist } from '@shared/utilities/common-util/common.util';\r\n\r\n/** Handler service for moving data out of the session. */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExportService {\r\n  /**\r\n   * Export Service Constructor\r\n   * @param  {Document} document\r\n   */\r\n  constructor(@Inject(DOCUMENT) private document: Document) {}\r\n\r\n  /**\r\n   * Converts a provided object to JSON and calls the browser to download it.\r\n   * @param  {any} obj\r\n   * @param  {string} fileName\r\n   */\r\n  exportAsJson(obj: any, fileName: string): void {\r\n    fileName = doesExist(fileName) ? fileName.replace(' ', '') : 'export';\r\n    const payload: Blob = new Blob([JSON.stringify(obj)], {\r\n      type: 'text/plain',\r\n    });\r\n    const a: HTMLAnchorElement = this.document.createElement('a');\r\n    a.href = URL.createObjectURL(payload);\r\n    a.download = `${fileName}.json`;\r\n    a.target = '_blank';\r\n    a.click();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}