{"ast":null,"code":"import { doesExist } from '@shared/utilities/common-util/common.util';\n/** View object for Menu Bar entries */\nexport class MenuItem {\n  constructor(menuItem) {\n    menuItem = doesExist(menuItem) ? menuItem : {};\n    this.children = doesExist(menuItem.children) ? menuItem.children.map(item => new MenuItem(item)) : [];\n    this.id = doesExist(menuItem.id) ? menuItem.id : '';\n    this.isExpanded = doesExist(menuItem.isExpanded) ? menuItem.isExpanded : false;\n    this.label = doesExist(menuItem.label) ? menuItem.label : '';\n    this.routerLink = doesExist(menuItem.routerLink) ? menuItem.routerLink : null;\n  }\n  /** Whether or not this MenuItem is a root node - i.e. has child nodes beneath it - or not */\n  get hasChildren() {\n    return this.children.length > 0;\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,QAAQ,2CAA2C;AAErE;AACA,OAAM,MAAOC,QAAQ;EAgBnBC,YAAYC,QAAmB;IAC7BA,QAAQ,GAAGH,SAAS,CAACG,QAAQ,CAAC,GAAGA,QAAQ,GAAI,EAAe;IAC5D,IAAI,CAACC,QAAQ,GAAGJ,SAAS,CAACG,QAAQ,CAACC,QAAQ,CAAC,GACxCD,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAEC,IAAI,IAAK,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,GACnD,EAAE;IACN,IAAI,CAACC,EAAE,GAAGP,SAAS,CAACG,QAAQ,CAACI,EAAE,CAAC,GAAGJ,QAAQ,CAACI,EAAE,GAAG,EAAE;IACnD,IAAI,CAACC,UAAU,GAAGR,SAAS,CAACG,QAAQ,CAACK,UAAU,CAAC,GAC5CL,QAAQ,CAACK,UAAU,GACnB,KAAK;IACT,IAAI,CAACC,KAAK,GAAGT,SAAS,CAACG,QAAQ,CAACM,KAAK,CAAC,GAAGN,QAAQ,CAACM,KAAK,GAAG,EAAE;IAC5D,IAAI,CAACC,UAAU,GAAGV,SAAS,CAACG,QAAQ,CAACO,UAAU,CAAC,GAC5CP,QAAQ,CAACO,UAAU,GACnB,IAAI;EACV;EA1BA;EACA,IAAIC,WAAW;IACb,OAAO,IAAI,CAACP,QAAQ,CAACQ,MAAM,GAAG,CAAC;EACjC","names":["doesExist","MenuItem","constructor","menuItem","children","map","item","id","isExpanded","label","routerLink","hasChildren","length"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\shared\\model\\menu-item.model.ts"],"sourcesContent":["import { doesExist } from '@shared/utilities/common-util/common.util';\r\n\r\n/** View object for Menu Bar entries */\r\nexport class MenuItem {\r\n  /** Any optioins that should occur as a drop down from this menu */\r\n  children: MenuItem[];\r\n  /** Whether or not this MenuItem is a root node - i.e. has child nodes beneath it - or not */\r\n  get hasChildren(): boolean {\r\n    return this.children.length > 0;\r\n  }\r\n  /** A unique identifier for this menu item */\r\n  id: string;\r\n  /** Whether or not the children for this menu item should be visible in the UI */\r\n  isExpanded: boolean;\r\n  /** The identifier of this menu item as rendered to the user */\r\n  label: string;\r\n  /** Optional link: indicates where this menu item should route when clicked */\r\n  routerLink: string;\r\n\r\n  constructor(menuItem?: MenuItem) {\r\n    menuItem = doesExist(menuItem) ? menuItem : ({} as MenuItem);\r\n    this.children = doesExist(menuItem.children)\r\n      ? menuItem.children.map((item) => new MenuItem(item))\r\n      : [];\r\n    this.id = doesExist(menuItem.id) ? menuItem.id : '';\r\n    this.isExpanded = doesExist(menuItem.isExpanded)\r\n      ? menuItem.isExpanded\r\n      : false;\r\n    this.label = doesExist(menuItem.label) ? menuItem.label : '';\r\n    this.routerLink = doesExist(menuItem.routerLink)\r\n      ? menuItem.routerLink\r\n      : null;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}