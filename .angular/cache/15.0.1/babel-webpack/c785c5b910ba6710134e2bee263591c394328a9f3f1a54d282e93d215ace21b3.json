{"ast":null,"code":"import { doesExist } from '@shared/utilities/common-util/common.util';\nexport class AbstractBaseModel {\n  constructor(arg) {\n    if (doesExist(arg)) {\n      Object.keys(this).forEach(key => {\n        if (doesExist(arg[key])) {\n          this[key] = arg[key];\n        }\n      });\n    }\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,QAAQ,2CAA2C;AAErE,OAAM,MAAgBC,iBAAiB;EACrCC,YAAYC,GAAS;IACnB,IAAIH,SAAS,CAACG,GAAG,CAAC,EAAE;MAClBC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAACC,OAAO,CAAEC,GAAG,IAAI;QAChC,IAAIP,SAAS,CAACG,GAAG,CAACI,GAAG,CAAC,CAAC,EAAE;UACvB,IAAI,CAACA,GAAG,CAAC,GAAGJ,GAAG,CAACI,GAAG,CAAC;;MAExB,CAAC,CAAC;;EAEN","names":["doesExist","AbstractBaseModel","constructor","arg","Object","keys","forEach","key"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\shared\\model\\abstract-base-model.model.ts"],"sourcesContent":["import { doesExist } from '@shared/utilities/common-util/common.util';\r\n\r\nexport abstract class AbstractBaseModel {\r\n  constructor(arg?: any) {\r\n    if (doesExist(arg)) {\r\n      Object.keys(this).forEach((key) => {\r\n        if (doesExist(arg[key])) {\r\n          this[key] = arg[key];\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}