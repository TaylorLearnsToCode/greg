{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@treasure/enter-map-or-magic/services/map-or-magic-controller-service/map-or-magic-controller-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../../../shared/pipes/bounded-range/bounded-range.pipe\";\nconst _c0 = [\"listNameInput\"];\nconst _c1 = [\"importListInput\"];\nfunction MagicItemTableDisplayComponent_ng_container_8_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"boundedRange\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 9)(7, \"a\", 3);\n    i0.ɵɵlistener(\"click\", function MagicItemTableDisplayComponent_ng_container_8_tr_7_Template_a_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const i_r6 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.removeEntryAt(i_r6));\n    });\n    i0.ɵɵtext(8, \"X\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 3, item_r5.chanceOf));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", item_r5.entry.name, \": \", item_r5.entry.description, \" \");\n  }\n}\nfunction MagicItemTableDisplayComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"table\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"d100\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 7);\n    i0.ɵɵtext(6, \"Result\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, MagicItemTableDisplayComponent_ng_container_8_tr_7_Template, 9, 5, \"tr\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const magicItemTable_r3 = ctx.ngIf;\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", magicItemTable_r3.entries);\n  }\n}\nexport class MagicItemTableDisplayComponent {\n  constructor(controllerService) {\n    this.controllerService = controllerService;\n  }\n  ngOnInit() {\n    this.destroySource = new Subject();\n    this.controllerService.enteringMagicItem$.pipe(tap(val => this.enteringMagicItem = val), takeUntil(this.destroySource)).subscribe();\n    this.magicItemTable$ = this.controllerService.magicItemTable$.pipe(tap(table => this.listName = table.name));\n  }\n  ngOnDestroy() {\n    this.destroySource.next();\n  }\n  clearTable() {\n    this.controllerService.clearTable();\n  }\n  exportList() {\n    this.controllerService.exportTable();\n  }\n  importList() {\n    this.controllerService.importTable(this.importListInputRef.nativeElement.files[0]);\n    this.importListInputRef.nativeElement.value = '';\n  }\n  removeEntryAt(index) {\n    this.controllerService.removeEntryAt(index);\n  }\n  toggleMapOrMagic() {\n    this.controllerService.toggleEntryItem();\n  }\n  updateListName() {\n    this.controllerService.setTableName(this.listName);\n  }\n}\nMagicItemTableDisplayComponent.ɵfac = function MagicItemTableDisplayComponent_Factory(t) {\n  return new (t || MagicItemTableDisplayComponent)(i0.ɵɵdirectiveInject(i1.MapOrMagicControllerServiceService));\n};\nMagicItemTableDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MagicItemTableDisplayComponent,\n  selectors: [[\"greg-magic-item-table-display\"]],\n  viewQuery: function MagicItemTableDisplayComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listNameRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.importListInputRef = _t.first);\n    }\n  },\n  decls: 20,\n  vars: 5,\n  consts: [[1, \"two-across\"], [\"type\", \"text\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [\"listNameInput\", \"\"], [3, \"click\"], [4, \"ngIf\"], [\"type\", \"file\", 3, \"change\"], [\"importListInput\", \"\"], [\"colspan\", \"2\", 1, \"result-header\"], [4, \"ngFor\", \"ngForOf\"], [1, \"non-content-cells\"], [1, \"content-cells\"]],\n  template: function MagicItemTableDisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"span\")(2, \"label\");\n      i0.ɵɵtext(3, \"List: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 1, 2);\n      i0.ɵɵlistener(\"change\", function MagicItemTableDisplayComponent_Template_input_change_4_listener() {\n        return ctx.updateListName();\n      })(\"ngModelChange\", function MagicItemTableDisplayComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.listName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function MagicItemTableDisplayComponent_Template_button_click_6_listener() {\n        return ctx.toggleMapOrMagic();\n      });\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, MagicItemTableDisplayComponent_ng_container_8_Template, 8, 1, \"ng-container\", 4);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementStart(10, \"section\")(11, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function MagicItemTableDisplayComponent_Template_button_click_11_listener() {\n        return ctx.clearTable();\n      });\n      i0.ɵɵtext(12, \"Clear List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function MagicItemTableDisplayComponent_Template_button_click_13_listener() {\n        return ctx.exportList();\n      });\n      i0.ɵɵtext(14, \"Export List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"label\");\n      i0.ɵɵtext(17, \"Import List: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 5, 6);\n      i0.ɵɵlistener(\"change\", function MagicItemTableDisplayComponent_Template_input_change_18_listener() {\n        return ctx.importList();\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.listName);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.enteringMagicItem ? \"Enter Map\" : \"Enter Magic Item\", \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(9, 3, ctx.magicItemTable$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.AsyncPipe, i4.BoundedRangePipe],\n  styles: [\"section[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-top: 0.5em;\\n}\\n\\ntable[_ngcontent-%COMP%]   table[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\ntable[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  padding: 0em 0.25em;\\n}\\n\\nth.result-header[_ngcontent-%COMP%] {\\n  text-align: left;\\n  padding-left: 3em;\\n}\\n\\n.content-cells[_ngcontent-%COMP%] {\\n  padding: 0em 0.5em;\\n}\\n\\n.non-content-cells[_ngcontent-%COMP%] {\\n  text-align: center;\\n  width: 2em;\\n}\\n\\n.two-across[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n}\\n/*# sourceURL=webpack://./src/app/treasure/enter-map-or-magic/components/magic-item-table-display/magic-item-table-display.component.scss */\\n/*# sourceURL=webpack://./src/assets/styles/_variables.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdHJlYXN1cmUvZW50ZXItbWFwLW9yLW1hZ2ljL2NvbXBvbmVudHMvbWFnaWMtaXRlbS10YWJsZS1kaXNwbGF5L21hZ2ljLWl0ZW0tdGFibGUtZGlzcGxheS5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvc3R5bGVzL192YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLGtCQUFBO0VBQ0EsaUJBQUE7QUFERjs7QUNzQkU7RUFDRSxXQUFBO0FEbkJKO0FDcUJJOztFQUVFLG1CQUFBO0FEbkJOOztBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtBQUdGOztBQUFBO0VBQ0Usa0JBQUE7QUFHRjs7QUFBQTtFQUNFLGtCQUFBO0VBQ0EsVUFBQTtBQUdGOztBQUFBO0VDV0UsYUFBQTtFQUNBLHFDQUFBO0FEUEYiLCJzb3VyY2VzQ29udGVudCI6WyJzZWN0aW9uIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAwLjVlbTtcbn1cblxudGFibGUgdGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cbnRhYmxlIHRhYmxlIHRkLFxudGFibGUgdGFibGUgdGgge1xuICBwYWRkaW5nOiAwZW0gMC4yNWVtO1xufVxuXG50aC5yZXN1bHQtaGVhZGVyIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgcGFkZGluZy1sZWZ0OiAzZW07XG59XG5cbi5jb250ZW50LWNlbGxzIHtcbiAgcGFkZGluZzogMGVtIDAuNWVtO1xufVxuXG4ubm9uLWNvbnRlbnQtY2VsbHMge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAyZW07XG59XG5cbi50d28tYWNyb3NzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbn0iLG51bGxdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["ElementRef","Subject","takeUntil","tap","i0","MagicItemTableDisplayComponent","constructor","controllerService","ngOnInit","destroySource","enteringMagicItem$","pipe","val","enteringMagicItem","subscribe","magicItemTable$","table","listName","name","ngOnDestroy","next","clearTable","exportList","exportTable","importList","importTable","importListInputRef","nativeElement","files","value","removeEntryAt","index","toggleMapOrMagic","toggleEntryItem","updateListName","setTableName","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\treasure\\enter-map-or-magic\\components\\magic-item-table-display\\magic-item-table-display.component.ts","D:\\workspaces\\greg\\src\\app\\treasure\\enter-map-or-magic\\components\\magic-item-table-display\\magic-item-table-display.component.html"],"sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MapOrMagicControllerServiceService } from '@treasure/enter-map-or-magic/services/map-or-magic-controller-service/map-or-magic-controller-service.service';\r\nimport { MagicItemTable } from '@treasure/treasure-common/model/magic-item.model';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'greg-magic-item-table-display',\r\n  templateUrl: './magic-item-table-display.component.html',\r\n  styleUrls: ['./magic-item-table-display.component.scss'],\r\n})\r\nexport class MagicItemTableDisplayComponent implements OnInit, OnDestroy {\r\n  @ViewChild('listNameInput')\r\n  listNameRef: ElementRef;\r\n  @ViewChild('importListInput')\r\n  importListInputRef: ElementRef;\r\n\r\n  private destroySource: Subject<void>;\r\n\r\n  enteringMagicItem: boolean;\r\n  listName: string;\r\n  magicItemTable$: Observable<MagicItemTable>;\r\n\r\n  constructor(private controllerService: MapOrMagicControllerServiceService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.destroySource = new Subject();\r\n    this.controllerService.enteringMagicItem$\r\n      .pipe(\r\n        tap((val) => (this.enteringMagicItem = val)),\r\n        takeUntil(this.destroySource)\r\n      )\r\n      .subscribe();\r\n    this.magicItemTable$ = this.controllerService.magicItemTable$.pipe(\r\n      tap((table) => (this.listName = table.name))\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroySource.next();\r\n  }\r\n\r\n  clearTable(): void {\r\n    this.controllerService.clearTable();\r\n  }\r\n\r\n  exportList(): void {\r\n    this.controllerService.exportTable();\r\n  }\r\n\r\n  importList(): void {\r\n    this.controllerService.importTable(\r\n      this.importListInputRef.nativeElement.files[0]\r\n    );\r\n    this.importListInputRef.nativeElement.value = '';\r\n  }\r\n\r\n  removeEntryAt(index: number): void {\r\n    this.controllerService.removeEntryAt(index);\r\n  }\r\n\r\n  toggleMapOrMagic(): void {\r\n    this.controllerService.toggleEntryItem();\r\n  }\r\n\r\n  updateListName(): void {\r\n    this.controllerService.setTableName(this.listName);\r\n  }\r\n}\r\n","<div class=\"two-across\">\r\n  <span>\r\n    <label>List: </label>\r\n    <input\r\n      #listNameInput\r\n      type=\"text\"\r\n      (change)=\"updateListName()\"\r\n      [(ngModel)]=\"listName\"\r\n    />\r\n  </span>\r\n  <button (click)=\"toggleMapOrMagic()\">\r\n    {{ enteringMagicItem ? \"Enter Map\" : \"Enter Magic Item\" }}\r\n  </button>\r\n</div>\r\n\r\n<ng-container *ngIf=\"magicItemTable$ | async as magicItemTable\">\r\n  <table>\r\n    <tr>\r\n      <th>d100</th>\r\n      <th colspan=\"2\" class=\"result-header\">Result</th>\r\n    </tr>\r\n    <tr *ngFor=\"let item of magicItemTable.entries; index as i\">\r\n      <td class=\"non-content-cells\">{{ item.chanceOf | boundedRange }}</td>\r\n      <td class=\"content-cells\">\r\n        {{ item.entry.name }}: {{ item.entry.description }}\r\n      </td>\r\n      <td class=\"non-content-cells\"><a (click)=\"removeEntryAt(i)\">X</a></td>\r\n    </tr>\r\n  </table>\r\n</ng-container>\r\n\r\n<section>\r\n  <button (click)=\"clearTable()\">Clear List</button>\r\n  <button (click)=\"exportList()\">Export List</button>\r\n  <br />\r\n  <label>Import List: </label>\r\n  <input #importListInput (change)=\"importList()\" type=\"file\" />\r\n</section>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}