{"ast":null,"code":"import { SaveAsClass } from '@shared/model/save-as-class.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction SaveAsFormComponent_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", ctx_r0.AS_CLASS[option_r1]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r1, \" \");\n  }\n}\nexport class SaveAsFormComponent {\n  constructor() {\n    this.AS_CLASS = SaveAsClass;\n    this.AS_CLASS_OPTIONS = Object.keys(SaveAsClass).filter(key => !RegExp(/^\\d+$/).test(key));\n  }\n  get saveAsForm() {\n    return this.parentForm.get('saveAs');\n  }\n  ngOnInit() {}\n}\nSaveAsFormComponent.ɵfac = function SaveAsFormComponent_Factory(t) {\n  return new (t || SaveAsFormComponent)();\n};\nSaveAsFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SaveAsFormComponent,\n  selectors: [[\"greg-save-as-form\"]],\n  inputs: {\n    parentForm: \"parentForm\"\n  },\n  decls: 4,\n  vars: 2,\n  consts: [[3, \"formGroup\"], [\"formControlName\", \"asClass\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"level\", \"type\", \"number\"], [3, \"value\"]],\n  template: function SaveAsFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"select\", 1);\n      i0.ɵɵtemplate(2, SaveAsFormComponent_option_2_Template, 2, 2, \"option\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.saveAsForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.AS_CLASS_OPTIONS);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"input[type=number][_ngcontent-%COMP%] {\\n  width: 2em;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  margin-left: 0.25em;\\n}\\n/*# sourceURL=webpack://./src/assets/styles/_variables.scss */\\n/*# sourceURL=webpack://./src/app/shared/components/save-as-form/save-as-form.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvc3R5bGVzL192YXJpYWJsZXMuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvc2F2ZS1hcy1mb3JtL3NhdmUtYXMtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFhRTtFQUNFLFVBRjRCO0FDVmhDOztBQUNBO0VBQ0UsbUJBQUE7QUFFRiIsInNvdXJjZXNDb250ZW50IjpbbnVsbCwiaW5wdXRbdHlwZT1udW1iZXJdIHtcbiAgd2lkdGg6IDJlbTtcbn1cblxuaW5wdXQge1xuICBtYXJnaW4tbGVmdDogMC4yNWVtO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,kCAAkC;;;;;;ICA1DC,iCAA2E;IACzEA,YACF;IAAAA,iBAAS;;;;;IAFuCA,kDAA0B;IACxEA,eACF;IADEA,0CACF;;;ADKJ,OAAM,MAAOC,mBAAmB;EAY9BC;IATS,aAAQ,GAAGH,WAAW;IACtB,qBAAgB,GAAGI,MAAM,CAACC,IAAI,CAACL,WAAW,CAAC,CAACM,MAAM,CACxDC,GAAG,IAAK,CAACC,MAAM,CAAC,OAAO,CAAC,CAACC,IAAI,CAACF,GAAG,CAAC,CACpC;EAMc;EAJf,IAAIG,UAAU;IACZ,OAAO,IAAI,CAACC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAqB;EAC1D;EAIAC,QAAQ,IAAU;;;mBAdPX,mBAAmB;AAAA;;QAAnBA,mBAAmB;EAAAY;EAAAC;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;IAAA;MCThClB,+BAA+B;MAE3BA,0EAES;MACXA,iBAAS;MACTA,2BAA+C;MACjDA,iBAAO;;;MAPDA,0CAAwB;MAECA,eAAmB;MAAnBA,8CAAmB","names":["SaveAsClass","i0","SaveAsFormComponent","constructor","Object","keys","filter","key","RegExp","test","saveAsForm","parentForm","get","ngOnInit","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\workspaces\\greg\\src\\app\\shared\\components\\save-as-form\\save-as-form.component.ts","D:\\workspaces\\greg\\src\\app\\shared\\components\\save-as-form\\save-as-form.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { UntypedFormGroup } from '@angular/forms';\r\nimport { SaveAsClass } from '@shared/model/save-as-class.enum';\r\n\r\n@Component({\r\n  selector: 'greg-save-as-form',\r\n  templateUrl: './save-as-form.component.html',\r\n  styleUrls: ['./save-as-form.component.scss'],\r\n})\r\nexport class SaveAsFormComponent implements OnInit {\r\n  @Input() parentForm: UntypedFormGroup;\r\n\r\n  readonly AS_CLASS = SaveAsClass;\r\n  readonly AS_CLASS_OPTIONS = Object.keys(SaveAsClass).filter(\r\n    (key) => !RegExp(/^\\d+$/).test(key)\r\n  );\r\n\r\n  get saveAsForm(): UntypedFormGroup {\r\n    return this.parentForm.get('saveAs') as UntypedFormGroup;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<form [formGroup]=\"saveAsForm\">\r\n  <select formControlName=\"asClass\">\r\n    <option *ngFor=\"let option of AS_CLASS_OPTIONS\" [value]=\"AS_CLASS[option]\">\r\n      {{ option }}\r\n    </option>\r\n  </select>\r\n  <input formControlName=\"level\" type=\"number\" />\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}